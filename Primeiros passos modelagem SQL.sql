/* PRIMEIRA FORMA NORMAL */

/*

1 - TODO CAMPO VETORIZADO SE TORNAR'A OUTRA TABELA

[AMARELO, AZUL, LARANJA, VERDE] -> CORES
[KA, FIESTA, UNO, CIVIC]-> CARROS

2 - TODO CAMPO MULTIVALORADO SE TORNAR'A OUTRA TABELA.
QUANDO O CAMPO FOR DIVIS'IVEL

3 - TODA TABELA NECESSITA DE PELO MENOS UM CAMPO QUE IDENTIFIQUE
TODO O REGISTRO COMO SENDO UNICO.
ISSO ;E O QUE CHAMAMOS DE CHAVE PRIMARIA OU PRIMARY KEY.


*/

/* CADINALIDADE */

/* QUEM DEFINE A CARDINALIDADE É A REGRA DE NEGOCIOS */

/* PRIMEIRO ALGARISMO - OBRIGATORIEDADE 
0 - NAO OBRIGATORIO
1 - OBRIGATORIO

SEGUNDO ALGARISMO - CARDINALIDADE
1 - MAXIMO DE UM
N - MAIS DE UM
*/

/* COMEÇA A SEÇÃO 8*/


CREATE DETABASE COMERCIO;

USE COMERCIO;

CREATE TABLE CLIENTE( 
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT, /*COLUNA ÚNICA - QUANDO NUMÉRICO INCREMENTO AUTOMÁTICO */
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M', 'F') NOT NULL, /*DOMÍNIO - INFORMAÇÕES FÍSICAS - SÓ P/ MYSQL*/
	EMAIL VARCHAR(50) UNIQUE, /*VALORES NÃO SE REPETEM*/
	CPF VARCHAR(15) UNIQUE
);

/*ENDEREÇO OBRIGATÓRIO - SOMENTE 1 CADASTRO*/

CREATE TABLE ENDERECO(
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT,
	RUA VARCHAR(30) NOT NULL,
	BAIRRO VARCHAR(30) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL, /*SIGLA DE ESTADO SEMPRE DUAS LETRAS, POR NÃO VARIAR UTILIZA-SE CHAR*/
	ID_CLIENTE INT UNIQUE,
	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

/*TELEFONE OPCIONAL - N CADASTROS OPCIONAIS*/
CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT,
	TIPO ENUM('RESIDENCIAL', 'COMERCIAL', 'CELULAR') NOT NULL,
	NUMERO VARCHAR(15) NOT NULL,
	ID_CLIENTE INT,
	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

/*CHAVE ESTRANGEIRA É A CHAVE PRIMARIA DE UMA TABELA QUE VAI ATÉ A OUTRA TABELA
	- PARA FAZER REFERÊNCIA ENTRE REGISTROS - */
	
/*EM RELACIONAMENTO (1,1) A CHAVE ESTRANGEIRA(FK) FICA NA TABELA MAIS FRACA(SECUNDÁRIA)E É DEFINIDA PELA 
TABELA MAIS FORTE(PRIMARIA)

	- NO EXEMPLO DO CURSO, O BANCO DE DADOS É DE UM COMÉRCIO LOCAL, ONDE NO REGISTRO DO CLIENTE É OBRIGATÓRIA
A ENTRADA DE UM ENDERECO - RELAÇÃO (1,1) - A TABELA CLIENTE É A MAIS FORTE E ENDERECO A MAIS FRACA.
PORTANDO A ID CLIENTE (PRIMARY KEY) SERÁ A FOREING KEY DA TABELA ENDEREÇO*/

/*EM RELACIONAMENTO (1,N) A CHAVE ESTRANGEIRA FICARA SEMPRE NA CARDINALIDADE N
-SENDO TELEFONE (N), A SUA FOREIGN KEY SERÁ A CHAVE PRIMARIA DA TABELA CLIENTE */

DESC CLIENTE;
+-----------+---------------+------+-----+---------+----------------+
| Field     | Type          | Null | Key | Default | Extra          |
+-----------+---------------+------+-----+---------+----------------+
| IDCLIENTE | int(11)       | NO   | PRI | NULL    | auto_increment |
| NOME      | varchar(30)   | NO   |     | NULL    |                |
| SEXO      | enum('M','F') | NO   |     | NULL    |                |
| EMAIL     | varchar(50)   | YES  | UNI | NULL    |                |
| CPF       | varchar(15)   | YES  | UNI | NULL    |                |
+-----------+---------------+------+-----+---------+----------------+

/*INSERÇÃO DE DADOS NA TABELA CLIENTE*/

INSERT INTO CLIENTE VALUES(NULL, 'JOÃO', 'M', 'JOAOCARDOSO@IG.COM','108231-180');
INSERT INTO CLIENTE VALUES(NULL,'CARLOS','M','CARLOSA@IG.COM','5464553466');
INSERT INTO CLIENTE VALUES(NULL,'ANA','F','ANA@IG.COM','456545678');
INSERT INTO CLIENTE VALUES(NULL,'CLARA','F',NULL,'5687766856');
INSERT INTO CLIENTE VALUES(NULL,'JORGE','M','JORGE@IG.COM','8756547688');
INSERT INTO CLIENTE VALUES(NULL,'CELIA','M','JCELIA@IG.COM','5767876889');

SELECT * FROM CLIENTE;

+-----------+--------+------+--------------------+------------+
| IDCLIENTE | NOME   | SEXO | EMAIL              | CPF        |
+-----------+--------+------+--------------------+------------+
|         1 | JOÃO   | M    | JOAOCARDOSO@IG.COM | 108231-180 |
|         2 | ANA    | F    | ANA@IG.COM         | 456545678  |
|         3 | CLARA  | F    | NULL               | 5687766856 |
|         4 | JORGE  | M    | JORGE@IG.COM       | 8756547688 |
|         5 | CELIA  | M    | JCELIA@IG.COM      | 5767876889 |
|         6 | CARLOS | M    | CARLOSA@IG.COM     | 5464553466 |
+-----------+--------+------+--------------------+------------+

DESC ENDERECO;

+------------+-------------+------+-----+---------+----------------+
| Field      | Type        | Null | Key | Default | Extra          |
+------------+-------------+------+-----+---------+----------------+
| IDENDERECO | int(11)     | NO   | PRI | NULL    | auto_increment |
| RUA        | varchar(30) | NO   |     | NULL    |                |
| BAIRRO     | varchar(30) | NO   |     | NULL    |                |
| CIDADE     | varchar(30) | NO   |     | NULL    |                |
| ESTADO     | char(2)     | NO   |     | NULL    |                |
| ID_CLIENTE | int(11)     | YES  | UNI | NULL    |                |
+------------+-------------+------+-----+---------+----------------+

/*INSERÇÃO DE DADOS NA TABELA ENDERECO*/

/*A FOREIGN KEY DEVE SER ADICIONADA COMO A ÚLTIMA COLUNA DAS TABELAS SECUNDÁRIAS*/

INSERT INTO ENDERECO VALUES(NULL,'RUA ANTONIO SA','CENTRO','B. HORIZONTE','MG',3);
INSERT INTO ENDERECO VALUES(NULL,'RUA CAPITAO HERMES','CENTRO','RIO DE JANEIRO','RJ',1);
INSERT INTO ENDERECO VALUES(NULL,'RUA PRES VARGAS','JARDINS','SAO PAULO','SP',2);
INSERT INTO ENDERECO VALUES(NULL,'RUA ALFANDEGA','ESTACIO','RIO DE JANEIRO','RJ',6);
INSERT INTO ENDERECO VALUES(NULL,'RUA DO OUVIDOR','FLAMENGO','RIO DE JANEIRO','RJ',5);
INSERT INTO ENDERECO VALUES(NULL,'RUA URUGUAIANA','CENTRO','VITORIA','ES',4);

/*NULL É UTILIZADO EM CHAVES PRIMARIAS AUTOMATIZADAS APENAS NO MySQL*/

SELECT * FROM ENDERECO;
+------------+--------------------+----------+----------------+--------+------------+
| IDENDERECO | RUA                | BAIRRO   | CIDADE         | ESTADO | ID_CLIENTE |
+------------+--------------------+----------+----------------+--------+------------+
|          1 | RUA ANTONIO SA     | CENTRO   | B. HORIZONTE   | MG     |          3 |
|          2 | RUA CAPITAO HERMES | CENTRO   | RIO DE JANEIRO | RJ     |          1 |
|          3 | RUA PRES VARGAS    | JARDINS  | SAO PAULO      | SP     |          2 |
|          4 | RUA ALFANDEGA      | ESTACIO  | RIO DE JANEIRO | RJ     |          6 |
|          5 | RUA DO OUVIDOR     | FLAMENGO | RIO DE JANEIRO | RJ     |          5 |
|          6 | RUA URUGUAIANA     | CENTRO   | VITORIA        | ES     |          4 |
+------------+--------------------+----------+----------------+--------+------------+

INSERT INTO ENDERECO VALUES(NULL,'RUA ALFANDEGA','CENTRO','SAO PAULO','SP',5); /*ENDEREÇO DUPLICADO NÃO ACEITO*/

DESC TELEFONE;

+------------+-------------------------------------------+------+-----+---------+----------------+
| Field      | Type                                      | Null | Key | Default | Extra          |
+------------+-------------------------------------------+------+-----+---------+----------------+
| IDTELEFONE | int(11)                                   | NO   | PRI | NULL    | auto_increment |
| TIPO       | enum('RESIDENCIAL','COMERCIAL','CELULAR') | NO   |     | NULL    |                |
| NUMERO     | varchar(15)                               | NO   |     | NULL    |                |
| ID_CLIENTE | int(11)                                   | YES  | MUL | NULL    |                |
+------------+-------------------------------------------+------+-----+---------+----------------+

/*INSERÇÃO DE DADOS NA TABELA ENDERECO*/

INSERT INTO TELEFONE VALUES(NULL,'CELULAR','78458743',4);
INSERT INTO TELEFONE VALUES(NULL,'RESIDENCIAL','56576876',4);
INSERT INTO TELEFONE VALUES(NULL,'CELULAR','87866896',1);
INSERT INTO TELEFONE VALUES(NULL,'COMERCIAL','54768899',6);
INSERT INTO TELEFONE VALUES(NULL,'RESIDENCIAL','99667587',1);
INSERT INTO TELEFONE VALUES(NULL,'CELULAR','78989765',2);
INSERT INTO TELEFONE VALUES(NULL,'CELULAR','99766676',2);
INSERT INTO TELEFONE VALUES(NULL,'COMERCIAL','66687899',1);
INSERT INTO TELEFONE VALUES(NULL,'RESIDENCIAL','89986668',4);
INSERT INTO TELEFONE VALUES(NULL,'CELULAR','88687909',6);

SELECT * FROM TELEFONE;

+------------+-------------+----------+------------+
| IDTELEFONE | TIPO        | NUMERO   | ID_CLIENTE |
+------------+-------------+----------+------------+
|          1 | CELULAR     | 78458743 |          4 |
|          2 | RESIDENCIAL | 56576876 |          4 |
|          3 | CELULAR     | 87866896 |          1 |
|          4 | COMERCIAL   | 54768899 |          6 |
|          5 | RESIDENCIAL | 99667587 |          1 |
|          6 | CELULAR     | 78989765 |          2 |
|          7 | CELULAR     | 99766676 |          2 |
|          8 | COMERCIAL   | 66687899 |          1 |
|          9 | RESIDENCIAL | 89986668 |          4 |
|         10 | CELULAR     | 88687909 |          6 |
+------------+-------------+----------+------------+

/*PROJEÇÃO, SELEÇÃO E JUNÇÃO*/
 
/* SELECT -> PROJEÇÃO DE TUDO AQUILO QUE VOCÊ QUER VER NA TELA*/
	SELECT NOW() AS DATA_ATUAL;
	
	SELECT 2 + 2 AS SOMA;
	
	SELECT 2 + 2 AS SOMA, NOME, NOW() 
	FROM CLIENTE; 

/* WHERE -> SELEÇÃO DE UM SUBCONJUNTO DOS DADOS DA TABELA ATRAVÉS DE UMA FILTRAGEM*/
	SELECT NOME, SEXO, EMAIL 
	FROM CLIENTE 
	WHERE SEXO = 'F';
	
	SELECT NUMERO 
	FROM TELEFONE 
	WHERE TIPO = 'CELULAR'; 

/* JOIN -> JUNÇÃO DE DADOS DE TABELA DIFERENTES QUE TENHAM REFERÊNCIAS CORRESPONDENTES*/
	SELECT NOME, SEXO, BAIRRO, CIDADE
	FROM CLIENTE
	INNER JOIN ENDERECO
	ON IDCLIENTE = ID_CLIENTE;

	SELECT NOME, SEXO, BAIRRO, CIDADE
	FROM CLIENTE
	INNER JOIN ENDERECO
	ON IDCLIENTE = ID_CLIENTE
	WHERE SEXO = 'F';

	SELECT NOME, SEXO, EMAIL, TIPO, NUMERO
	FROM CLIENTE
	INNER JOIN TELEFONE
	ON IDCLIENTE = ID_CLIENTE; 

	SELECT CLIENTE.NOME, CLIENTE.SEXO, CLIENTE.EMAIL, ENDERECO.CIDADE, ENDERECO.BAIRRO, TELEFONE.TIPO, TELEFONE.NUMERO
	FROM CLIENTE
	INNER JOIN ENDERECO
	ON CLIENTE.IDCLIENTE = ENDERECO.ID_CLIENTE
	INNER JOIN TELEFONE
	ON CLIENTE.IDCLIENTE = TELEFONE.ID_CLIENTE; 

	+--------+------+--------------------+----------------+---------+-------------+----------+
| NOME   | SEXO | EMAIL              | CIDADE         | BAIRRO  | TIPO        | NUMERO   |
+--------+------+--------------------+----------------+---------+-------------+----------+
| JOÃO   | M    | JOAOCARDOSO@IG.COM | RIO DE JANEIRO | CENTRO  | CELULAR     | 87866896 |
| JOÃO   | M    | JOAOCARDOSO@IG.COM | RIO DE JANEIRO | CENTRO  | RESIDENCIAL | 99667587 |
| JOÃO   | M    | JOAOCARDOSO@IG.COM | RIO DE JANEIRO | CENTRO  | COMERCIAL   | 66687899 |
| ANA    | F    | ANA@IG.COM         | SAO PAULO      | JARDINS | CELULAR     | 78989765 |
| ANA    | F    | ANA@IG.COM         | SAO PAULO      | JARDINS | CELULAR     | 99766676 |
| JORGE  | M    | JORGE@IG.COM       | VITORIA        | CENTRO  | CELULAR     | 78458743 |
| JORGE  | M    | JORGE@IG.COM       | VITORIA        | CENTRO  | RESIDENCIAL | 56576876 |
| JORGE  | M    | JORGE@IG.COM       | VITORIA        | CENTRO  | RESIDENCIAL | 89986668 |
| CARLOS | M    | CARLOSA@IG.COM     | RIO DE JANEIRO | ESTACIO | COMERCIAL   | 54768899 |
| CARLOS | M    | CARLOSA@IG.COM     | RIO DE JANEIRO | ESTACIO | CELULAR     | 88687909 |
+--------+------+--------------------+----------------+---------+-------------+----------+


/*SQL É UMA LINGUAGEM DE 4ª GERAÇÃO*/

/*
	
	DML - DATA MANIPULATION LANGUAGE
	DDL - DATA DEFINITION LANGUAGE
	DCL - DATA CONTROL LANGUAGE
	TCL - TRANSACTION CONTROL LANGUAGE

*/

/*		----- DML -> MANIPULAÇÃO DOS DADOS -----		*/

/*	INSERT	*/

INSERT INTO CLIENTE VALUES(NULL,'PAULA','M',NULL,'77437493');
SELECT * FROM CLIENTE;

INSERT INTO ENDERECO VALUES(NULL,'RUA JOAQUIM SILVA','ALVORADA','NITEROI','RJ',7);
SELECT * FROM ENDERECO;

/*	FILTROS	*/

SELECT NOME, SEXO
FROM CLIENTE
WHERE SEXO = 'M';

/*	UPDATE	*/

SELECT * FROM CLIENTE
WHERE IDCLIENTE = 7;

UPDATE CLIENTE
SET SEXO = 'F'
WHERE IDCLIENTE = 7;

SELECT * FROM CLIENTE
WHERE IDCLIENTE = 5;

UPDATE CLIENTE
SET SEXO = 'F'
WHERE IDCLIENTE = 5;

/* DELETE */ 

INSERT INTO CLIENTE VALUES(NULL,'XXX','M',NULL,'XXX');

SELECT * FROM CLIENTE;

SELECT * FROM CLIENTE
WHERE IDCLIENTE = 8;

DELETE FROM CLIENTE 
WHERE IDCLIENTE = 8;

/*		----- DDL -> DEFINIÇÃO DO TIPO DE DADOS -----		*/

/* CREATE TABLE */ 

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME_PRODUTO VARCHAR(30) NOT NULL,
	PRECO INT,
	FRENTE FLOAT(10,2) NOT NULL
);

/* ALTER TABLE */ 

/* ALTERANDO O NOME DE UMA COLUNA E TIPO - CHANGE */

ALTER TABLE PRODUTO
CHANGE PRECO VALOR_UNITARIO INT NOT NULL;

DESC PRODUTO; /* ALTERAÇÃO DO NOME DA COLUNA E PARA TIPO NÃO NULO - OBRIGATÓRIO ENTRADA DE DADO */

ALTER TABLE PRODUTO
CHANGE VALOR_UNITARIO VALOR_UNITARIO INT;

DESC PRODUTO; /* ALTERAÇÃO PARA TIPO NULO - NÃO OBRIGATÓRIO A ENTRADADA DE DADO */

ALTER TABLE PRODUTO
CHANGE FRETE FRETE FLOAT(10,2) NOT NULL;

DESC PRODUTO;

/* ALTERANDO O TIPO - MODIFY */

ALTER TABLE PRODUTO
MODIFY VALOR_UNITARIO VARCHAR(50) NOT NULL;

/* ADICIONAR COLUNA - ADD */

ALTER TABLE PRODUTO
ADD PESO FLOAT(10,2) NOT NULL;

/* APAGAR COLUNA - DROP */

ALTER TABLE PRODUTO
DROP COLUMN PESO;

DESC PRODUTO;

/* ADICIONAR COLUNA POSIÇÃO ESPECÍFICA - AFTER */

ALTER TABLE PRODUTO
ADD COLUMN PESO FLOAT(10,2) NOT NULL
AFTER NOME_PRODUTO;

DESC PRODUTO;

ALTER TABLE PRODUTO
ADD COLUMN ORIGEM VARCHAR(30) NOT NULL
FIRST;

DESC PRODUTO;

/*		-----	EXERCÍCIOS DML	-----		*/

/* REFAZENDO DATABASE COMERCIO */

DROP DATABASE COMERCIO;

SHOW DATABASES;

CREATE DATABASE COMERCIO;

SHOW DATABASES;

USE COMERCIO;

CREATE TABLE CLIENTE(
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M','F') NOT NULL,
	EMAIL VARCHAR(50) UNIQUE,
	CPF VARCHAR(15) UNIQUE
);

CREATE TABLE ENDERECO(
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT, 
	RUA VARCHAR(30) NOT NULL,
	BAIRRO VARCHAR(30) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	ID_CLIENTE INT UNIQUE,

	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT, 
	TIPO ENUM('RES','COM','CEL') NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_CLIENTE INT,

	FOREIGN KEY(ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

/*INSERINDO DADOS NA TABELA CLIENTE*/
INSERT INTO CLIENTE VALUES(NULL,'JOAO','M','JOAOA@IG.COM','76567587887');
INSERT INTO CLIENTE VALUES(NULL,'CARLOS','M','CARLOSA@IG.COM','5464553466');
INSERT INTO CLIENTE VALUES(NULL,'ANA','F','ANA@IG.COM','456545678');
INSERT INTO CLIENTE VALUES(NULL,'CLARA','F',NULL,'5687766856');
INSERT INTO CLIENTE VALUES(NULL,'JORGE','M','JORGE@IG.COM','8756547688');
INSERT INTO CLIENTE VALUES(NULL,'CELIA','M','JCELIA@IG.COM','5767876889');
INSERT INTO CLIENTE VALUES(NULL,'PAULA','F',NULL,'77437493');
INSERT INTO CLIENTE VALUES(NULL,'XXX','M',NULL,'XXX');

SELECT * FROM CLIENTE;

SELECT * FROM CLIENTE
WHERE IDCLIENTE = 8;

DELETE FROM CLIENTE 
WHERE IDCLIENTE = 8;

SELECT * FROM CLIENTE;

/*INSERINDO DADOS NA TABELA ENDEREÇO*/

INSERT INTO ENDERECO VALUES(NULL,'RUA ANTONIO SA','CENTRO','B. HORIZONTE','MG',4);
INSERT INTO ENDERECO VALUES(NULL,'RUA CAPITAO HERMES','CENTRO','RIO DE JANEIRO','RJ',1);
INSERT INTO ENDERECO VALUES(NULL,'RUA PRES VARGAS','JARDINS','SAO PAULO','SP',3);
INSERT INTO ENDERECO VALUES(NULL,'RUA ALFANDEGA','ESTACIO','RIO DE JANEIRO','RJ',2);
INSERT INTO ENDERECO VALUES(NULL,'RUA DO OUVIDOR','FLAMENGO','RIO DE JANEIRO','RJ',6);
INSERT INTO ENDERECO VALUES(NULL,'RUA URUGUAIANA','CENTRO','VITORIA','ES',5);
INSERT INTO ENDERECO VALUES(NULL,'RUA JOAQUIM SILVA','ALVORADA','NITEROI','RJ',7);

SELECT * FROM ENDERECO;

/*INSERINDO DADOS NA TABELA TELEFONE*/

INSERT INTO TELEFONE VALUES(NULL,'CEL','78458743',5);
INSERT INTO TELEFONE VALUES(NULL,'RES','56576876',5);
INSERT INTO TELEFONE VALUES(NULL,'CEL','87866896',1);
INSERT INTO TELEFONE VALUES(NULL,'COM','54768899',2);
INSERT INTO TELEFONE VALUES(NULL,'RES','99667587',1);
INSERT INTO TELEFONE VALUES(NULL,'CEL','78989765',3);
INSERT INTO TELEFONE VALUES(NULL,'CEL','99766676',3);
INSERT INTO TELEFONE VALUES(NULL,'COM','66687899',1);
INSERT INTO TELEFONE VALUES(NULL,'RES','89986668',5);
INSERT INTO TELEFONE VALUES(NULL,'CEL','88687909',2);

SELECT * FROM TELEFONE;

/* INSERINDO NOVOS DADOS DO EXERCÍCIO */

/*CLIENTE*/

INSERT INTO CLIENTE VALUES(NULL,'FLAVIO','M','FLAVIO@IG.COM','4657765');
INSERT INTO CLIENTE VALUES(NULL,'ANDRE','M','ANDRE@GLOBO.COM','7687567');
INSERT INTO CLIENTE VALUES(NULL,'GIOVANA','F',NULL,'0876655');
INSERT INTO CLIENTE VALUES(NULL,'KARLA','M','KARLA@GMAIL.COM','545676778');
INSERT INTO CLIENTE VALUES(NULL,'DANIELE','M','DANIELE@GMAIL.COM','43536789');
INSERT INTO CLIENTE VALUES(NULL,'LORENA','M',NULL,'774557887');
INSERT INTO CLIENTE VALUES(NULL,'EDUARDO','M',NULL,'54376457');
INSERT INTO CLIENTE VALUES(NULL,'ANTONIO','F','ANTONIO@IG.COM','12436767');
INSERT INTO CLIENTE VALUES(NULL,'ANTONIO','M','ANTONIO@UOL.COM','3423565');
INSERT INTO CLIENTE VALUES(NULL,'ELAINE','M','ELAINE@GLOBO.COM','32567763');
INSERT INTO CLIENTE VALUES(NULL,'CARMEM','M','CARMEM@IG.COM','787832213');
INSERT INTO CLIENTE VALUES(NULL,'ADRIANA','F','ADRIANA@GMAIL.COM','88556942');
INSERT INTO CLIENTE VALUES(NULL,'JOICE','F','JOICE@GMAIL.COM','55412256');

/*ENDEREÇO*/

INSERT INTO ENDERECO VALUES(NULL,'RUA GUEDES','CASCADURA','B. HORIZONTE','MG',9);
INSERT INTO ENDERECO VALUES(NULL,'RUA MAIA LACERDA','ESTACIO','RIO DE JANEIRO','RJ',10);
INSERT INTO ENDERECO VALUES(NULL,'RUA VISCONDESSA','CENTRO','RIO DE JANEIRO','RJ',11);
INSERT INTO ENDERECO VALUES(NULL,'RUA NELSON MANDELA','COPACABANA','RIO DE JANEIRO','RJ',12);
INSERT INTO ENDERECO VALUES(NULL,'RUA ARAUJO LIMA','CENTRO','VITORIA','ES',13);
INSERT INTO ENDERECO VALUES(NULL,'RUA CASTRO ALVES','LEBLON','RIO DE JANEIRO','RJ',14);
INSERT INTO ENDERECO VALUES(NULL,'AV CAPITAO ANTUNES','CENTRO','CURITIBA','PR',15);
INSERT INTO ENDERECO VALUES(NULL,'AV CARLOS BARROSO','JARDINS','SAO PAULO','SP',16);
INSERT INTO ENDERECO VALUES(NULL,'ALAMEDA SAMPAIO','BOM RETIRO','CURITIBA','PR',17);
INSERT INTO ENDERECO VALUES(NULL,'RUA DA LAPA','LAPA','SAO PAULO','SP',18);
INSERT INTO ENDERECO VALUES(NULL,'RUA GERONIMO','CENTRO','RIO DE JANEIRO','RJ',19);
INSERT INTO ENDERECO VALUES(NULL,'RUA GOMES FREIRE','CENTRO','RIO DE JANEIRO','RJ',20);
INSERT INTO ENDERECO VALUES(NULL,'RUA GOMES FREIRE','CENTRO','RIO DE JANEIRO','RJ',21);

/*TELEFONE*/

INSERT INTO TELEFONE VALUES(NULL,'RES','68976565',9);
INSERT INTO TELEFONE VALUES(NULL,'CEL','99656675',9);
INSERT INTO TELEFONE VALUES(NULL,'CEL','33567765',11);
INSERT INTO TELEFONE VALUES(NULL,'CEL','88668786',11);
INSERT INTO TELEFONE VALUES(NULL,'COM','55689654',11);
INSERT INTO TELEFONE VALUES(NULL,'COM','88687979',12);
INSERT INTO TELEFONE VALUES(NULL,'COM','88965676',13);
INSERT INTO TELEFONE VALUES(NULL,'CEL','89966809',15);
INSERT INTO TELEFONE VALUES(NULL,'COM','88679978',16);
INSERT INTO TELEFONE VALUES(NULL,'CEL','99655768',17);
INSERT INTO TELEFONE VALUES(NULL,'RES','89955665',18);
INSERT INTO TELEFONE VALUES(NULL,'RES','77455786',19);
INSERT INTO TELEFONE VALUES(NULL,'RES','89766554',19);
INSERT INTO TELEFONE VALUES(NULL,'RES','77755785',20);
INSERT INTO TELEFONE VALUES(NULL,'COM','44522578',20);

/*		-> O QUÊ SE PEDE? <-		
	
	# RELATÓRIO GERAL DE TODOS OS CLIENTE;
	# RELATÓRIO DE HOMENS;
	# RELATÓRIOS DE MULHERES;
	# QUANTIDADE DE HOMENS E MULHERES;
	# IDs E EMAIL DAS MULHERES QUE MORAM NO
	CENTRO DO RIO DE JANEIRO E NÃO TEM CELULAR.
*/

/* RELATÓRIO GERAL DE TODOS OS CLIENTES */

SELECT C.IDCLIENTE, C.NOME, C.SEXO, C.EMAIL, C.CPF, 
	   E.RUA, E.BAIRRO, E.CIDADE, E.ESTADO, 
	   T.TIPO, T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

+-----------+---------+------+-------------------+-------------+--------------------+------------+----------------+--------+------+----------+
| IDCLIENTE | NOME    | SEXO | EMAIL             | CPF         | RUA                | BAIRRO     | CIDADE         | ESTADO | TIPO | NUMERO   |
+-----------+---------+------+-------------------+-------------+--------------------+------------+----------------+--------+------+----------+
|         1 | JOAO    | M    | JOAOA@IG.COM      | 76567587887 | RUA CAPITAO HERMES | CENTRO     | RIO DE JANEIRO | RJ     | CEL  | 87866896 |
|         1 | JOAO    | M    | JOAOA@IG.COM      | 76567587887 | RUA CAPITAO HERMES | CENTRO     | RIO DE JANEIRO | RJ     | RES  | 99667587 |
|         1 | JOAO    | M    | JOAOA@IG.COM      | 76567587887 | RUA CAPITAO HERMES | CENTRO     | RIO DE JANEIRO | RJ     | COM  | 66687899 |
|         2 | CARLOS  | M    | CARLOSA@IG.COM    | 5464553466  | RUA ALFANDEGA      | ESTACIO    | RIO DE JANEIRO | RJ     | COM  | 54768899 |
|         2 | CARLOS  | M    | CARLOSA@IG.COM    | 5464553466  | RUA ALFANDEGA      | ESTACIO    | RIO DE JANEIRO | RJ     | CEL  | 88687909 |
|         3 | ANA     | F    | ANA@IG.COM        | 456545678   | RUA PRES VARGAS    | JARDINS    | SAO PAULO      | SP     | CEL  | 78989765 |
|         3 | ANA     | F    | ANA@IG.COM        | 456545678   | RUA PRES VARGAS    | JARDINS    | SAO PAULO      | SP     | CEL  | 99766676 |
|         5 | JORGE   | M    | JORGE@IG.COM      | 8756547688  | RUA URUGUAIANA     | CENTRO     | VITORIA        | ES     | CEL  | 78458743 |
|         5 | JORGE   | M    | JORGE@IG.COM      | 8756547688  | RUA URUGUAIANA     | CENTRO     | VITORIA        | ES     | RES  | 56576876 |
|         5 | JORGE   | M    | JORGE@IG.COM      | 8756547688  | RUA URUGUAIANA     | CENTRO     | VITORIA        | ES     | RES  | 89986668 |
|         9 | FLAVIO  | M    | FLAVIO@IG.COM     | 4657765     | RUA GUEDES         | CASCADURA  | B. HORIZONTE   | MG     | RES  | 68976565 |
|         9 | FLAVIO  | M    | FLAVIO@IG.COM     | 4657765     | RUA GUEDES         | CASCADURA  | B. HORIZONTE   | MG     | CEL  | 99656675 |
|        11 | GIOVANA | F    | NULL              | 0876655     | RUA VISCONDESSA    | CENTRO     | RIO DE JANEIRO | RJ     | CEL  | 33567765 |
|        11 | GIOVANA | F    | NULL              | 0876655     | RUA VISCONDESSA    | CENTRO     | RIO DE JANEIRO | RJ     | CEL  | 88668786 |
|        11 | GIOVANA | F    | NULL              | 0876655     | RUA VISCONDESSA    | CENTRO     | RIO DE JANEIRO | RJ     | COM  | 55689654 |
|        12 | KARLA   | M    | KARLA@GMAIL.COM   | 545676778   | RUA NELSON MANDELA | COPACABANA | RIO DE JANEIRO | RJ     | COM  | 88687979 |
|        13 | DANIELE | M    | DANIELE@GMAIL.COM | 43536789    | RUA ARAUJO LIMA    | CENTRO     | VITORIA        | ES     | COM  | 88965676 |
|        15 | EDUARDO | M    | NULL              | 54376457    | AV CAPITAO ANTUNES | CENTRO     | CURITIBA       | PR     | CEL  | 89966809 |
|        16 | ANTONIO | F    | ANTONIO@IG.COM    | 12436767    | AV CARLOS BARROSO  | JARDINS    | SAO PAULO      | SP     | COM  | 88679978 |
|        17 | ANTONIO | M    | ANTONIO@UOL.COM   | 3423565     | ALAMEDA SAMPAIO    | BOM RETIRO | CURITIBA       | PR     | CEL  | 99655768 |
|        18 | ELAINE  | M    | ELAINE@GLOBO.COM  | 32567763    | RUA DA LAPA        | LAPA       | SAO PAULO      | SP     | RES  | 89955665 |
|        19 | CARMEM  | M    | CARMEM@IG.COM     | 787832213   | RUA GERONIMO       | CENTRO     | RIO DE JANEIRO | RJ     | RES  | 77455786 |
|        19 | CARMEM  | M    | CARMEM@IG.COM     | 787832213   | RUA GERONIMO       | CENTRO     | RIO DE JANEIRO | RJ     | RES  | 89766554 |
|        20 | ADRIANA | F    | ADRIANA@GMAIL.COM | 88556942    | RUA GOMES FREIRE   | CENTRO     | RIO DE JANEIRO | RJ     | RES  | 77755785 |
|        20 | ADRIANA | F    | ADRIANA@GMAIL.COM | 88556942    | RUA GOMES FREIRE   | CENTRO     | RIO DE JANEIRO | RJ     | COM  | 44522578 |
+-----------+---------+------+-------------------+-------------+--------------------+------------+----------------+--------+------+----------+

/* RELATÓRIO DE HOMENS */

SELECT C.IDCLIENTE, C.NOME, C.SEXO, C.EMAIL, C.CPF, 
	   E.RUA, E.BAIRRO, E.CIDADE, E.ESTADO, 
	   T.TIPO, T.NUMERO
FROM CLIENTE C 
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE C.SEXO = 'M';

+-----------+---------+------+-------------------+-------------+--------------------+------------+----------------+--------+------+----------+
| IDCLIENTE | NOME    | SEXO | EMAIL             | CPF         | RUA                | BAIRRO     | CIDADE         | ESTADO | TIPO | NUMERO   |
+-----------+---------+------+-------------------+-------------+--------------------+------------+----------------+--------+------+----------+
|         1 | JOAO    | M    | JOAOA@IG.COM      | 76567587887 | RUA CAPITAO HERMES | CENTRO     | RIO DE JANEIRO | RJ     | CEL  | 87866896 |
|         1 | JOAO    | M    | JOAOA@IG.COM      | 76567587887 | RUA CAPITAO HERMES | CENTRO     | RIO DE JANEIRO | RJ     | RES  | 99667587 |
|         1 | JOAO    | M    | JOAOA@IG.COM      | 76567587887 | RUA CAPITAO HERMES | CENTRO     | RIO DE JANEIRO | RJ     | COM  | 66687899 |
|         2 | CARLOS  | M    | CARLOSA@IG.COM    | 5464553466  | RUA ALFANDEGA      | ESTACIO    | RIO DE JANEIRO | RJ     | COM  | 54768899 |
|         2 | CARLOS  | M    | CARLOSA@IG.COM    | 5464553466  | RUA ALFANDEGA      | ESTACIO    | RIO DE JANEIRO | RJ     | CEL  | 88687909 |
|         5 | JORGE   | M    | JORGE@IG.COM      | 8756547688  | RUA URUGUAIANA     | CENTRO     | VITORIA        | ES     | CEL  | 78458743 |
|         5 | JORGE   | M    | JORGE@IG.COM      | 8756547688  | RUA URUGUAIANA     | CENTRO     | VITORIA        | ES     | RES  | 56576876 |
|         5 | JORGE   | M    | JORGE@IG.COM      | 8756547688  | RUA URUGUAIANA     | CENTRO     | VITORIA        | ES     | RES  | 89986668 |
|         9 | FLAVIO  | M    | FLAVIO@IG.COM     | 4657765     | RUA GUEDES         | CASCADURA  | B. HORIZONTE   | MG     | RES  | 68976565 |
|         9 | FLAVIO  | M    | FLAVIO@IG.COM     | 4657765     | RUA GUEDES         | CASCADURA  | B. HORIZONTE   | MG     | CEL  | 99656675 |
|        12 | KARLA   | M    | KARLA@GMAIL.COM   | 545676778   | RUA NELSON MANDELA | COPACABANA | RIO DE JANEIRO | RJ     | COM  | 88687979 |
|        13 | DANIELE | M    | DANIELE@GMAIL.COM | 43536789    | RUA ARAUJO LIMA    | CENTRO     | VITORIA        | ES     | COM  | 88965676 |
|        15 | EDUARDO | M    | NULL              | 54376457    | AV CAPITAO ANTUNES | CENTRO     | CURITIBA       | PR     | CEL  | 89966809 |
|        17 | ANTONIO | M    | ANTONIO@UOL.COM   | 3423565     | ALAMEDA SAMPAIO    | BOM RETIRO | CURITIBA       | PR     | CEL  | 99655768 |
|        18 | ELAINE  | M    | ELAINE@GLOBO.COM  | 32567763    | RUA DA LAPA        | LAPA       | SAO PAULO      | SP     | RES  | 89955665 |
|        19 | CARMEM  | M    | CARMEM@IG.COM     | 787832213   | RUA GERONIMO       | CENTRO     | RIO DE JANEIRO | RJ     | RES  | 77455786 |
|        19 | CARMEM  | M    | CARMEM@IG.COM     | 787832213   | RUA GERONIMO       | CENTRO     | RIO DE JANEIRO | RJ     | RES  | 89766554 |
+-----------+---------+------+-------------------+-------------+--------------------+------------+----------------+--------+------+----------+

/*ATUALIZANDO A TABELA POIS HÁ MULHERES REGISTRADAS COMO O SEXO MASCULINO*/

/*IDs QUE SERÃO ALTERADOS 12, 13, 18 E 19*/

SELECT IDCLIENTE, NOME, SEXO 
FROM CLIENTE
WHERE IDCLIENTE IN (12,13,18,19);

+-----------+---------+------+
| IDCLIENTE | NOME    | SEXO |
+-----------+---------+------+
|        12 | KARLA   | M    |
|        13 | DANIELE | M    |
|        18 | ELAINE  | M    |
|        19 | CARMEM  | M    |
+-----------+---------+------+

UPDATE CLIENTE
SET SEXO = 'F'
WHERE IDCLIENTE WHERE IDCLIENTE IN (12,13,18,19);

+-----------+---------+------+
| IDCLIENTE | NOME    | SEXO |
+-----------+---------+------+
|        12 | KARLA   | F    |
|        13 | DANIELE | F    |
|        18 | ELAINE  | F    |
|        19 | CARMEM  | F    |
+-----------+---------+------+

/* RELATÓRIO DE MULHERES */

SELECT C.IDCLIENTE, C.NOME, C.SEXO, C.EMAIL, C.CPF, E.RUA, E.BAIRRO, E.CIDADE, E.ESTADO, T.TIPO, T.NUMERO
FROM CLIENTE C 
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE C.SEXO = 'F';


+-----------+---------+------+-------------------+-----------+--------------------+------------+----------------+--------+------+----------+
| IDCLIENTE | NOME    | SEXO | EMAIL             | CPF       | RUA                | BAIRRO     | CIDADE         | ESTADO | TIPO | NUMERO   |
+-----------+---------+------+-------------------+-----------+--------------------+------------+----------------+--------+------+----------+
|         3 | ANA     | F    | ANA@IG.COM        | 456545678 | RUA PRES VARGAS    | JARDINS    | SAO PAULO      | SP     | CEL  | 78989765 |
|         3 | ANA     | F    | ANA@IG.COM        | 456545678 | RUA PRES VARGAS    | JARDINS    | SAO PAULO      | SP     | CEL  | 99766676 |
|        11 | GIOVANA | F    | NULL              | 0876655   | RUA VISCONDESSA    | CENTRO     | RIO DE JANEIRO | RJ     | CEL  | 33567765 |
|        11 | GIOVANA | F    | NULL              | 0876655   | RUA VISCONDESSA    | CENTRO     | RIO DE JANEIRO | RJ     | CEL  | 88668786 |
|        11 | GIOVANA | F    | NULL              | 0876655   | RUA VISCONDESSA    | CENTRO     | RIO DE JANEIRO | RJ     | COM  | 55689654 |
|        12 | KARLA   | F    | KARLA@GMAIL.COM   | 545676778 | RUA NELSON MANDELA | COPACABANA | RIO DE JANEIRO | RJ     | COM  | 88687979 |
|        13 | DANIELE | F    | DANIELE@GMAIL.COM | 43536789  | RUA ARAUJO LIMA    | CENTRO     | VITORIA        | ES     | COM  | 88965676 |
|        16 | ANTONIO | F    | ANTONIO@IG.COM    | 12436767  | AV CARLOS BARROSO  | JARDINS    | SAO PAULO      | SP     | COM  | 88679978 |
|        18 | ELAINE  | F    | ELAINE@GLOBO.COM  | 32567763  | RUA DA LAPA        | LAPA       | SAO PAULO      | SP     | RES  | 89955665 |
|        19 | CARMEM  | F    | CARMEM@IG.COM     | 787832213 | RUA GERONIMO       | CENTRO     | RIO DE JANEIRO | RJ     | RES  | 77455786 |
|        19 | CARMEM  | F    | CARMEM@IG.COM     | 787832213 | RUA GERONIMO       | CENTRO     | RIO DE JANEIRO | RJ     | RES  | 89766554 |
|        20 | ADRIANA | F    | ADRIANA@GMAIL.COM | 88556942  | RUA GOMES FREIRE   | CENTRO     | RIO DE JANEIRO | RJ     | RES  | 77755785 |
|        20 | ADRIANA | F    | ADRIANA@GMAIL.COM | 88556942  | RUA GOMES FREIRE   | CENTRO     | RIO DE JANEIRO | RJ     | COM  | 44522578 |
+-----------+---------+------+-------------------+-----------+--------------------+------------+----------------+--------+------+----------+

/*ATUALIZANDO A TABELA POIS HÁ HOMENS REGISTRADOS COMO O SEXO FEMININO*/

/*IDs QUE SERÃO ALTERADOS 16 */

SELECT IDCLIENTE, NOME, SEXO 
FROM CLIENTE
WHERE IDCLIENTE = 16;

+-----------+---------+------+
| IDCLIENTE | NOME    | SEXO |
+-----------+---------+------+
|        16 | ANTONIO | F    |
+-----------+---------+------+

UPDATE CLIENTE
SET SEXO = 'M'
WHERE IDCLIENTE = 16;

+-----------+---------+------+
| IDCLIENTE | NOME    | SEXO |
+-----------+---------+------+
|        16 | ANTONIO | M    |
+-----------+---------+------+

/* QUANTIDADE DE HOMENS E MULHERES */

SELECT SEXO, COUNT(*) AS "QUANTITATIVO"
FROM CLIENTE
GROUP BY SEXO;

+------+--------------+
| SEXO | QUANTITATIVO |
+------+--------------+
| M    |           10 |
| F    |           10 |
+------+--------------+

/* IDs E EMAIL DAS MULHERES QUE MORAM NO CENTRO DO RIO DE JANEIRO E NÃO TEM CELULAR */

/* SELECT C.IDCLIENTE, C.EMAIL, C.NOME, C.SEXO, E.BAIRRO, E.CIDADE, T.TIPO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
WHERE C.SEXO = 'F' 
AND (T.TIPO = 'COM' OR T.TIPO = "RES") AND 
(E.BAIRRO = 'CENTRO' AND E.CIDADE = 'RIO DE JANEIRO');

+-----------+-------------------+---------+------+--------+----------------+------+
| IDCLIENTE | EMAIL             | NOME    | SEXO | BAIRRO | CIDADE         | TIPO |
+-----------+-------------------+---------+------+--------+----------------+------+
|        11 | NULL              | GIOVANA | F    | CENTRO | RIO DE JANEIRO | COM  |
|        19 | CARMEM@IG.COM     | CARMEM  | F    | CENTRO | RIO DE JANEIRO | RES  |
|        19 | CARMEM@IG.COM     | CARMEM  | F    | CENTRO | RIO DE JANEIRO | RES  |
|        20 | ADRIANA@GMAIL.COM | ADRIANA | F    | CENTRO | RIO DE JANEIRO | RES  |
|        20 | ADRIANA@GMAIL.COM | ADRIANA | F    | CENTRO | RIO DE JANEIRO | COM  |
+-----------+-------------------+---------+------+--------+----------------+------+

SOLUÇÃO ERRADA - CONTEÚDO SERÁ APRESENTADO MAIS A FRENTE*/

/* PARA UMA CAMPANHA DE MARKETING, O SETOR SOLICITOU UM RELATÓRIO COM O NOME, EMAIL E TELEFONE CELULAR 
DOS CLIENTES QUE MORAM NO ESTADO DO RIO DE JANEIRO VOCÊ TERÁ QUE PASSAR A QUERY PARA GERAR O RELATORIO 
PARA O PROGRAMADOR */

SELECT C.NOME, C.EMAIL, T.NUMERO, E.ESTADO, T.TIPO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE T.TIPO = 'CEL' AND
E.ESTADO = 'RJ';

+---------+----------------+----------+--------+------+
| NOME    | EMAIL          | NUMERO   | ESTADO | TIPO |
+---------+----------------+----------+--------+------+
| JOAO    | JOAOA@IG.COM   | 87866896 | RJ     | CEL  |
| CARLOS  | CARLOSA@IG.COM | 88687909 | RJ     | CEL  |
| GIOVANA | NULL           | 33567765 | RJ     | CEL  |
| GIOVANA | NULL           | 88668786 | RJ     | CEL  |
+---------+----------------+----------+--------+------+

/* PARA UMA CAMPANHA DE PRODUTOS DE BELEZA, O COMERCIAL SOLICITOU UM RELATÓRIO COM O NOME, EMAIL 
E TELEFONE CELULAR DAS MULHERES QUE MORAM NO ESTADO DE SÃO PAULO VOCÊ TERÁ QUE PASSAR A QUERY 
PARA GERAR O RELATORIO PARA O PROGRAMADOR */

SELECT C.NOME, C.EMAIL, C.SEXO, T.NUMERO, E.ESTADO, T.TIPO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
WHERE SEXO = 'F'AND
T.TIPO = 'CEL' AND
E.ESTADO = 'SP';

+------+------------+------+----------+--------+------+
| NOME | EMAIL      | SEXO | NUMERO   | ESTADO | TIPO |
+------+------------+------+----------+--------+------+
| ANA  | ANA@IG.COM | F    | 78989765 | SP     | CEL  |
| ANA  | ANA@IG.COM | F    | 99766676 | SP     | CEL  |
+------+------------+------+----------+--------+------+

/*SEÇÃO 11*/

/* QUERY: NOME, EMAIL, NUMERO, ESTADO */

SELECT C.NOME, C.EMAIL, T.NUMERO, E.ESTADO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

+---------+-------------------+----------+--------+
| NOME    | EMAIL             | NUMERO   | ESTADO |
+---------+-------------------+----------+--------+
| JORGE   | JORGE@IG.COM      | 78458743 | ES     |
| JORGE   | JORGE@IG.COM      | 56576876 | ES     |
| JOAO    | JOAOA@IG.COM      | 87866896 | RJ     |
| CARLOS  | CARLOSA@IG.COM    | 54768899 | RJ     |
| JOAO    | JOAOA@IG.COM      | 99667587 | RJ     |
| ANA     | ANA@IG.COM        | 78989765 | SP     |
| ANA     | ANA@IG.COM        | 99766676 | SP     |
| JOAO    | JOAOA@IG.COM      | 66687899 | RJ     |
| JORGE   | JORGE@IG.COM      | 89986668 | ES     |
| CARLOS  | CARLOSA@IG.COM    | 88687909 | RJ     |
| FLAVIO  | FLAVIO@IG.COM     | 68976565 | MG     |
| FLAVIO  | FLAVIO@IG.COM     | 99656675 | MG     |
| GIOVANA | NULL              | 33567765 | RJ     |
| GIOVANA | NULL              | 88668786 | RJ     |
| GIOVANA | NULL              | 55689654 | RJ     |
| KARLA   | KARLA@GMAIL.COM   | 88687979 | RJ     |
| DANIELE | DANIELE@GMAIL.COM | 88965676 | ES     |
| EDUARDO | NULL              | 89966809 | PR     |
| ANTONIO | ANTONIO@IG.COM    | 88679978 | SP     |
| ANTONIO | ANTONIO@UOL.COM   | 99655768 | PR     |
| ELAINE  | ELAINE@GLOBO.COM  | 89955665 | SP     |
| CARMEM  | CARMEM@IG.COM     | 77455786 | RJ     |
| CARMEM  | CARMEM@IG.COM     | 89766554 | RJ     |
| ADRIANA | ADRIANA@GMAIL.COM | 77755785 | RJ     |
| ADRIANA | ADRIANA@GMAIL.COM | 44522578 | RJ     |
+---------+-------------------+----------+--------+

SELECT C.NOME, 
	   IFNULL(C.EMAIL, '**********') AS 'EMAIL', 
	   T.NUMERO, 
	   E.ESTADO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

+---------+-------------------+----------+--------+
| NOME    | EMAIL             | NUMERO   | ESTADO |
+---------+-------------------+----------+--------+
| JORGE   | JORGE@IG.COM      | 78458743 | ES     |
| JORGE   | JORGE@IG.COM      | 56576876 | ES     |
| JOAO    | JOAOA@IG.COM      | 87866896 | RJ     |
| CARLOS  | CARLOSA@IG.COM    | 54768899 | RJ     |
| JOAO    | JOAOA@IG.COM      | 99667587 | RJ     |
| ANA     | ANA@IG.COM        | 78989765 | SP     |
| ANA     | ANA@IG.COM        | 99766676 | SP     |
| JOAO    | JOAOA@IG.COM      | 66687899 | RJ     |
| JORGE   | JORGE@IG.COM      | 89986668 | ES     |
| CARLOS  | CARLOSA@IG.COM    | 88687909 | RJ     |
| FLAVIO  | FLAVIO@IG.COM     | 68976565 | MG     |
| FLAVIO  | FLAVIO@IG.COM     | 99656675 | MG     |
| GIOVANA | **********        | 33567765 | RJ     |
| GIOVANA | **********        | 88668786 | RJ     |
| GIOVANA | **********        | 55689654 | RJ     |
| KARLA   | KARLA@GMAIL.COM   | 88687979 | RJ     |
| DANIELE | DANIELE@GMAIL.COM | 88965676 | ES     |
| EDUARDO | **********        | 89966809 | PR     |
| ANTONIO | ANTONIO@IG.COM    | 88679978 | SP     |
| ANTONIO | ANTONIO@UOL.COM   | 99655768 | PR     |
| ELAINE  | ELAINE@GLOBO.COM  | 89955665 | SP     |
| CARMEM  | CARMEM@IG.COM     | 77455786 | RJ     |
| CARMEM  | CARMEM@IG.COM     | 89766554 | RJ     |
| ADRIANA | ADRIANA@GMAIL.COM | 77755785 | RJ     |
| ADRIANA | ADRIANA@GMAIL.COM | 44522578 | RJ     |
+---------+-------------------+----------+--------+

/*		----- VIEW -----		*/
/*QUERY: PROJETAR TODAS AS INFORMAÇÕES DO CIENTE*/

CREATE VIEW RELATORIO AS
 SELECT C.IDCLIENTE,
		C.NOME,
		C.SEXO, 
		C.EMAIL, 
		C.CPF,
		T.TIPO, 
		T.NUMERO,
		E.RUA,
		E.BAIRRO, 
		E.CIDADE,
		E.ESTADO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

SELECT * FROM RELATORIO;

DROP VIEW RELATORIO;

CREATE VIEW V_RELATORIO AS
 SELECT C.IDCLIENTE,
		C.NOME,
		C.SEXO, 
		IFNULL(C.EMAIL, '*******') AS 'E-MAIL', 
		C.CPF,
		T.TIPO, 
		T.NUMERO,
		E.RUA,
		E.BAIRRO, 
		E.CIDADE,
		E.ESTADO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;

SELECT * FROM V_RELATORIO;

SELECT NOME, NUMERO, ESTADO
FROM V_RELATORIO;

/* DML(UPDATE, INSERT E DELETE) EM VIEWS */

INSERT INTO V_RELATORIO VALUES('ANDREIA','F','ANDREIA@UOL.COM.BR','CEL','873547864','CENTRO','VITORIA','ES'
);

/*ERROR: Can not insert into join view 'comercio.v_relatorio' without fields list*/

DELETE FROM V_RELATORIO WHERE NOME = 'JORGE';

/*ERROR: Can not delete from join view 'comercio.v_relatorio'*/

UPDATE V_RELATORIO 
SET NOME = 'JOSE'
WHERE NOME = 'JORGE';

SELECT NOME
FROM CLIENTE
WHERE SEXO = 'M';

/* É PERMITIDO FAZER UPDATES EM VIEWS COM JOIN */

/* 2º EXEMPLO */

CREATE TABLE JOGADORES(
	IDJOGADOR INT,
	NOME VARCHAR(30),
	ESTADO CHAR(2)
);

INSERT INTO JOGADORES VALUES(1,'GUERRERO','RS');
INSERT INTO JOGADORES VALUES(2,'GABIGOL','RJ');
INSERT INTO JOGADORES VALUES(3,'GANSO','RJ');
INSERT INTO JOGADORES VALUES(4,'NENÊ', 'RJ');
INSERT INTO JOGADORES VALUES(5,'LOVE','SP');

CREATE VIEW V_JOGADORES AS
SELECT NOME, ESTADO
FROM JOGADORES;

SELECT * FROM V_JOGADORES;

DELETE FROM V_JOGADORES
WHERE NOME = 'GUERRERO';

SELECT * FROM V_JOGADORES;

/*É PERMITO DELETAR DENTRO DE UMA VIEW ONDE NÃO EXISTE JOIN */

INSERT INTO V_JOGADORES VALUES('GUERRERO','RS');

SELECT * FROM JOGADORES;

/*É PERMITIDO INSERIR MAS É NECESSÁRIO UMA ATENÇÃO A MAIS NOS REQUISITOS DA VIEW E SUAS RESTRIÇÕES*/

SELECT * FROM V_RELATORIO
WHERE SEXO = 'F';

/*É PERMITIDO SELECIONAR UM SUBCONJUNTO ATRAVÉS DE UM FILTRO DENTRO DE UMA VIEW COM JOIN*/

/*		------ ORDER BY -----		*/

CREATE TABLE ALUNOS(
	NUMERO INT,
	NOME VARCHAR(30)
);

INSERT INTO ALUNOS VALUES(1,'JOAO');
INSERT INTO ALUNOS VALUES(1,'MARIA');
INSERT INTO ALUNOS VALUES(2,'ZOE');
INSERT INTO ALUNOS VALUES(2,'ANDRE');
INSERT INTO ALUNOS VALUES(3,'CLARA');
INSERT INTO ALUNOS VALUES(1,'CLARA');
INSERT INTO ALUNOS VALUES(4,'MAFRA');
INSERT INTO ALUNOS VALUES(5,'JANAINA');
INSERT INTO ALUNOS VALUES(1,'JANAINA');
INSERT INTO ALUNOS VALUES(3,'MARCELO');
INSERT INTO ALUNOS VALUES(4,'GIOVANI');
INSERT INTO ALUNOS VALUES(5,'ANTONIO');
INSERT INTO ALUNOS VALUES(6,'ANA');
INSERT INTO ALUNOS VALUES(6,'VIVIANE'); 

SELECT * FROM ALUNOS;

SELECT * FROM ALUNOS
ORDER BY NUMERO;

SELECT * FROM ALUNOS
ORDER BY 1;

SELECT * FROM ALUNOS
ORDER BY 2;

/* ORDENANDO POR MAIS DE UMA COLUNA */

SELECT * FROM ALUNOS
ORDER BY NUMERO, NOME;

SELECT * FROM ALUNOS
ORDER BY 2, 1;

SELECT * FROM ALUNOS
ORDER BY 1, 2;

/* MESCLANDO ORDER BY COM PROJECAO */

SELECT NOME FROM ALUNOS
ORDER BY 1, 2; /*ERROR: Unknown column '2' in 'order clause'*/

SELECT NOME FROM ALUNOS
ORDER BY NUMERO, NOME; /*FORMA CORRETA MESCLADA*/


/* ORDER BY DESCENDENTE / ASCENDENTE(PADRÃO) - DESC/ASC */

SELECT * FROM ALUNOS
ORDER BY 1, 2; /*AS DUAS COLUNAS ORDENADAS DE FORMA ASCENDENTE*/

SELECT * FROM ALUNOS
ORDER BY 1 ASC; /*1ª COLUNA ORDENENADA DE FORMA ASCENDETNE, 2ª COLUNA ORDENADA NA ORDEM DE ENTRADA(INSERT)*/

SELECT * FROM ALUNOS
ORDER BY 1 DESC; /*1ª COLUNA ORDENENADA DE FORMA DESCENDETNE, 2ª COLUNA ORDENADA NA ORDEM DE ENTRADA(INSERT)*/

SELECT * FROM ALUNOS
ORDER BY 1, 2 DESC; /*1ª COLUNA ORDENENADA DE FORMA DESCENDETNE, 2ª COLUNA ORDENADA NA ORDEM CRESCENTE */

SELECT * FROM ALUNOS
ORDER BY 1 DESC, 2 DESC; /*AS DUAS COLUNAS ORDENADAS DE FORMA DESCENDENTE*/


/* ORDENANDO COM JOINS */

USE COMERCIO;

SELECT  C.NOME, 
		C.SEXO, 
		IFNULL(C.EMAIL,'CLIENTE SEM EMAIL') AS "E-MAIL", 
		T.TIPO, 
		T.NUMERO, 
		E.BAIRRO, 
		E.CIDADE, 
		E.ESTADO
FROM CLIENTE C 
INNER JOIN TELEFONE T 
ON C.IDCLIENTE = T.ID_CLIENTE 
INNER JOIN ENDERECO E 
ON C.IDCLIENTE = E.ID_CLIENTE
ORDER BY 1;

SHOW TABLES;

SELECT * FROM V_RELATORIO
ORDER BY 1;

/*		----- DELIMITER (AULA 64) -----		*/

/*(;) É O DELIMITADOR PADRÃO PARA FINALIZAR O COMANDO NO MySQL */

STATUS

/*MUDAR O DELIMITADOR*/

DELIMITER $

SELECT * FROM CLIENTE$

/*SEMPRE CHECAR O DELIMITER QUANDO ENTRAR E SAIR DO BANCO*/

/*		----- STORED PROCEDURES(AULA 65) -----		*/

/*PROCEDIMENTOS ARMAZENADOS - BLOCOS DE PROGRAMAÇÃO QUE FICAM ARMAZENADOS NO BANCO*/

/*BLOCOS ANÔNIMOS - SÃO EXECUTADOS MAS NÃO SÃO ARMAZENDADOS NO BANCO*/

SELECT 'NADINNE' AS NOME;

/*BLOCOS NOMINADOS - SÃO OS 'STORED PROCEDURES'*/

DELIMITER $

STATUS /*DELIMITER ALTERADO*/

/*QUERY QUE APRESENTE O NOME DA EMPRESA NA HORA DO LOGIN NO SISTEMA*/

CREATE PROCEDURE NOME_EMPRESA()
BEGIN

	SELECT 'UNIVERSIDADE DOS DADOS' AS EMPRESA;

END
$

/*CHAMANDO UMA PROCEDURE*/

CALL NOME_EMPRESA()$

/* PROCEDURES COM PARAMETROS */

SELECT 10 + 10 AS CONTA;

DELIMITER $

CREATE PROCEDURE CONTA()
BEGIN
	
	SELECT 10 + 10 AS CONTA;

END
$

CALL CONTA();

DROP PROCEDURE CONTA;

DELIMITER $

CREATE PROCEDURE CONTA(NUMERO1 INT, NUMERO2 INT)
BEGIN
	
	SELECT NUMERO1 + NUMERO2 AS CONTA;

END
$

CALL CONTA(100,50)$
CALL CONTA(345634,4354)$
CALL CONTA(55654,56760)$
CALL CONTA(45646,6766)$

/* AULA 67 - PROCEDURE COM QUERY - PARÂMETROS */

/*DELETANDO DATABASES JÁ CRIADAS APENAS PARA ORGANIZAÇÃO DO BANCO DE DADOS*/

DROP DATABASE COMERCIO;
DROP DATABASE EXEMPLO;
DROP DATABASE EXERCICIO;
DROP DATABASE LIVRARIA;
DROP DATABASE PROJETO;

/*		----- PROCEDURES -----		*/

/*CRIAR DATABASE */

CREATE DATABASE PROJETO;

USE PROJETO;

CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	HORAS INT(3) NOT NULL,
	VALOR FLOAT(10,2) NOT NULL
);

DESC CURSOS;

INSERT INTO CURSOS VALUES(NULL, 'JAVA', 30,	500.00);
INSERT INTO CURSOS VALUES(NULL, 'FUNDAMENTOS DE BANCO DE DADOS', 40, 700.00);

SELECT * FROM CURSOS;

DELIMITER #

STATUS

CREATE PROCEDURE CAD_CURSO(P_NOME VARCHAR(30), P_HORAS INT(30), P_PRECO FLOAT(10,2))
BEGIN
	
	INSERT INTO CURSOS VALUES(NULL,P_NOME,P_HORAS,P_PRECO);

END
#

DELIMITER ;

CALL CAD_CURSO('BI SQL SERVER',35,3000.00);
CALL CAD_CURSO('POWER BI',20,1000.00);
CALL CAD_CURSO('TABLEAU',30,1200.00);

SELECT * FROM CURSOS;

/* CRIAR UMA PROCEDURE PARA CONSULTAR CURSOS */

DELIMITER #

CREATE PROCEDURE CONSULTA(P_IDCURSO INT)
BEGIN
	SELECT NOME, HORAS, VALOR FROM CURSOS
	WHERE IDCURSO = P_IDCURSO;
END
#

DELIMITER ;

CALL CONSULTA(2);

/* AULA 70 ------ FUNÇÕES DE AGREGAÇÃO NUMÉRICAS ----- */

/*TABELA QUE CONSTA O VALOR DAS VENDAS DE CADA VENDENDOR NO 1º TRIMESTRE*/

CREATE TABLE VENDEDORES(
	IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	JANEIRO FLOAT(10,2),
	FEVEREIRO FLOAT(10,2),
	MARCO FLOAT(10,2)
);

INSERT INTO VENDEDORES VALUES(NULL,'CARLOS','M',76234.78,88346.87,5756.90);
INSERT INTO VENDEDORES VALUES(NULL,'MARIA','F',5865.78,6768.87,4467.90);
INSERT INTO VENDEDORES VALUES(NULL,'ANTONIO','M',78769.78,6685.87,6664.90);
INSERT INTO VENDEDORES VALUES(NULL,'CLARA','F',5779.78,446886.87,8965.90);
INSERT INTO VENDEDORES VALUES(NULL,'ANDERSON','M',676545.78,77544.87,578665.90);
INSERT INTO VENDEDORES VALUES(NULL,'IVONE','F',57789.78,44774.87,68665.90);
INSERT INTO VENDEDORES VALUES(NULL,'JOAO','M',4785.78,66478.87,6887.90);
INSERT INTO VENDEDORES VALUES(NULL,'CELIA','F',89667.78,57654.87,5755.90);

SELECT * FROM VENDEDORES;

/* MAX - TRAZ O VALOR MAXIMO DE UMA COLUNA */

SELECT MAX(FEVEREIRO) AS MAIOR_FEV
FROM VENDEDORES;


/* MIN - TRAZ O VALOR MINIMO DE UMA COLUNA */

SELECT MIN(FEVEREIRO) AS MENOR_FEV
FROM VENDEDORES;

/* AVG - TRAZ O VALOR MEDIO DE UMA COLUNA */

SELECT AVG(FEVEREIRO) AS MEDIA_FEV
FROM VENDEDORES; /*MÉDIA DA COLUNA*/

/* VARIAS FUNCOES */

SELECT MAX(JANEIRO) AS MAX_JAN,
       MIN(JANEIRO) AS MIN_JAN,
	   AVG(JANEIRO) AS MEDIA_JAN
	   FROM VENDEDORES;
	 
/*TRUNCATE */

/*  FUNÇÃO QUE SERVE PARA DETERMINAR A QUANTIDADE CASAS DECIMAIS DE UM DETERMIDADO NÚMERO
	ESTA FUNÇÃO RECEBE DOIS PARÂMETRO: O NÚMERO E AS CASAS DECIMAIS
	->TRUNCATE(NÚMERO, CASA_DECIMAL)
*/
	 
SELECT MAX(JANEIRO) AS MAX_JAN,
       MIN(JANEIRO) AS MIN_JAN,
	   TRUNCATE(AVG(JANEIRO),2) AS MEDIA_JAN
	   FROM VENDEDORES;

/* A30 - AGREGANDO COM SUM() */

SELECT SUM(JANEIRO) AS TOTAL_JAN
FROM VENDEDORES; /*SUM() - SOMATÓRIO DA COLUNA*/

SELECT SUM(JANEIRO) AS TOTAL_JAN,
	   SUM(FEVEREIRO) AS TOTAL_FEV,
	   SUM(MARCO) AS TOTAL_MAR
FROM VENDEDORES;

/* VENDAS POR SEXO */

SELECT SEXO, SUM(MARCO) AS TOTAL_MARCO
FROM VENDEDORES
GROUP BY SEXO;

/* AULA 72 - SUBQUERIES

VENDEDOR QUE VENDEU MENOS EM MARCO
E O SEU NOME 

NOME E O VALOR QUE VENDEU MAIS EM MARCO

QUEM VENDEU MAIS QUE O VALOR MEDIO DE FEV
*/

SELECT NOME, MIN(MARCO) AS MIN_MARCO
FROM VENDEDORES; /*ERRO*/

SELECT * FROM VENDEDORES;

SELECT NOME, MARCO FROM VENDEDORES;

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (SELECT MIN(MARCO) FROM VENDEDORES);

SELECT MIN(MARCO) FROM VENDEDORES;

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (
	SELECT MIN(MARCO) FROM VENDEDORES
	WHERE SEXO = 'M');

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (SELECT MAX(FEVEREIRO) FROM VENDEDORES);

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO > (SELECT AVG(MARCO) FROM VENDEDORES);

SELECT NOME, FEVEREIRO FROM VENDEDORES
WHERE FEVEREIRO > (SELECT AVG(FEVEREIRO) FROM VENDEDORES);

SELECT AVG(FEVEREIRO) FROM VENDEDORES;

SELECT NOME, FEVEREIRO FROM VENDEDORES
WHERE FEVEREIRO < (SELECT AVG(FEVEREIRO) FROM VENDEDORES);

/* AULA 73 - OPERACOES EM LINHA */

SELECT * FROM VENDEDORES;

SELECT NOME,
	   JANEIRO,
	   FEVEREIRO,
	   MARCO,
	   (JANEIRO+FEVEREIRO+MARCO) AS "TOTAL",
	   TRUNCATE((JANEIRO+FEVEREIRO+MARCO)/3,2) AS "MEDIA"
	   FROM VENDEDORES;
	   
/* APLICANDO UM % */

SELECT NOME,
	   JANEIRO,
	   FEVEREIRO,
	   MARCO,
	   (JANEIRO+FEVEREIRO+MARCO) AS "TOTAL",
	   (JANEIRO+FEVEREIRO+MARCO) * .25 AS "DESCONTO",
	   TRUNCATE((JANEIRO+FEVEREIRO+MARCO)/3,2) AS "MEDIA"
	   FROM VENDEDORES;
	   
/* A74 - ALTERANDO TABELAS */

CREATE TABLE TABELA(
	COLUNA1 VARCHAR(30),
	COLUNA2 VARCHAR(30),
	COLUNA3 VARCHAR(30)
);

/*CREATE TABLE TABELA(
	COLUNA1 INT PRIMARY KEY AUTO_INCREMENT
);*/

--ADICIONANDO UMA PRIMARY KEY
ALTER TABLE TABELA 
ADD PRIMARY KEY (COLUNA1);

DESC TABELA;

--ADICIONANDO COLUNA SEM POSICAO. ULTIMA POSICAO
ALTER TABLE TABELA 
ADD COLUNA varchar(30);

DESC TABELA;

ALTER TABLE TABELA 
ADD COLUNAN INT;

DESC TABELA;

--ADICIONANDO UMA COLUNA COM POSICAO
ALTER TABLE TABELA 
ADD COLUMN COLUNA4 VARCHAR(30) NOT NULL UNIQUE
AFTER COLUNA3;

DESC TABELA;

--MODIFICANDO O TIPO DE UM CAMPO
ALTER TABLE TABELA
MODIFY COLUNA2 DATE NOT NULL;

DESC TABELA;

--RENOMEANDO O NOME DA TABELA
ALTER TABLE TABELA 
RENAME PESSOA;

CREATE TABLE TIME(
	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
	TIME VARCHAR(30),
	ID_PESSOA VARCHAR(30)
);

--Foreign key
ALTER TABLE TIME 
ADD FOREIGN KEY(ID_PESSOA)
REFERENCES PESSOA(COLUNA1);

DESC TABELA;

/* VERIFICAR AS CHAVES */
SHOW CREATE TABLE TIME;

/* A75 - ORGANIZACAO DE CHAVES - CONSTRAINT (REGRA) */

	/* A CHAVE É UMA REGRA DE INTEGRIDADE REFERENCIAL 
		* A CHAVE PRIMARIA VAI GARANTIR QUE O REGISTRO SEJA ÚNICO E NÃO SE REPITA
		* A CHAVE ESTRANGEIRA VAI GARANTIR QUE NÃO HAJA NENHUM REGISTRO DE UMA TABELA SEM REFERÊNCIA EM OUTRA 
	*/

CREATE TABLE JOGADOR(
	IDJOGADOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30)
);

CREATE TABLE TIMES(
	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
	NOMETIME VARCHAR(30),
	ID_JOGADOR INT,
	FOREIGN KEY(ID_JOGADOR)
	REFERENCES JOGADOR(IDJOGADOR)
);

INSERT INTO JOGADOR VALUES(NULL,'GUERRERO');
SELECT * FROM JOGADOR;

INSERT INTO TIMES VALUES(NULL,'FLAMENGO',1);
SELECT * FROM TIMES;


SHOW CREATE TABLE JOGADOR;
SHOW CREATE TABLE TIMES;

/* A76 - ORGANIZANDO CHAVES */

CREATE DATABASE COMERCIO;

USE COMERCIO;

CREATE TABLE CLIENTE(
	IDCLIENTE INT,
	NOME VARCHAR(30) NOT NULL
);

/* POR QUE CHAVE PRIMARIA POR FORA DA TABELA?
	*O MySQL NÃO DÁ NOME PARA CONSTANTE DE CHAVE PRIMARIA;
	*PARA CRIAR AS TABELAS PRIMEIROS ISOLADAMENTE SEM INTERFERÊNCIA
	DA REGREA DE DEPENDÊNCIA;
	*SCRIPT MAIS ORGANIZADO - BLOCOS DE CREATE TABLE E BLOCOS DE CONSTRAITS.

*/

CREATE TABLE TELEFONE(
	IDTELEFONE INT,
	TIPO CHAR(3) NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_CLIENTE INT
);

ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE
PRIMARY KEY(IDCLIENTE);

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE);

SHOW CREATE TABLE TELEFONE;

/* DICIONARIO DE DADOS */

SHOW DATABASES;

/*BANCOS DO DICIONÁRIO DO MySQL:
	information_schema;
	mysql;
	performance_schema.
*/

USE INFORMATION_SCHEMA;

STATUS

SHOW TABLES;

DESC TABLE_CONSTRAINTS;

SELECT CONSTRAINT_SCHEMA AS "BANCO",
	   TABLE_NAME AS "TABELA",
	   CONSTRAINT_NAME AS "NOME REGRA",
	   CONSTRAINT_TYPE AS "TIPO"
	   FROM TABLE_CONSTRAINTS
	   WHERE CONSTRAINT_SCHEMA = 'COMERCIO';

/* APAGANDO CONSTRAINTS */

USE COMERCIO;

ALTER TABLE TELEFONE
DROP FOREIGN KEY FK_CLIENTE_TELEFONE;

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE);

/* AÇÕES DE CONSTRAINTS - NÃO HÁ AULA -NÃO ENTENDI

USE COMERCIO;

SHOW TABLES;

INSERT INTO CLIENTE VALUES(1,'RICARDO');
INSERT INTO CLIENTE VALUES(2,'CLARA');
INSERT INTO CLIENTE VALUES(3,'JULIO');
INSERT INTO CLIENTE VALUES(4,'ANA');

SELECT * FROM CLIENTE;

+-----------+---------+
| IDCLIENTE | NOME    |
+-----------+---------+
|         1 | RICARDO |
|         2 | CLARA   |
|         3 | JULIO   |
|         4 | ANA     |
+-----------+---------+

INSERT INTO TELEFONE VALUES(10,'CEL','37834334',2);
INSERT INTO TELEFONE VALUES(20,'RES','67465656',2);
INSERT INTO TELEFONE VALUES(30,'CEL','88665645',1);
INSERT INTO TELEFONE VALUES(40,'RES','77543546',3);
INSERT INTO TELEFONE VALUES(50,'COM','75454675',1);
INSERT INTO TELEFONE VALUES(60,'CEL','76765455',4);

SELECT * FROM TELEFONE;


+------------+------+----------+------------+
| IDTELEFONE | TIPO | NUMERO   | ID_CLIENTE |
+------------+------+----------+------------+
|         10 | CEL  | 37834334 |          2 |
|         20 | RES  | 67465656 |          2 |
|         30 | CEL  | 88665645 |          1 |
|         40 | RES  | 77543546 |          3 |
|         50 | COM  | 75454675 |          1 |
|         60 | CEL  | 76765455 |          4 |
+------------+------+----------+------------+

SELECT NOME, TIPO, NUMERO
FROM CLIENTE
INNER JOIN TELEFONE
ON IDCLIENTE = ID_CLIENTE;

--ERRO DE REFERENCIA

SELECT IDCLIENTE, NOME, NUMERO  
FROM CLIENTE
INNER JOIN TELEFONE
WHERE IDCLIENTE =1;


DELETE FROM CLIENTE 
WHERE IDCLIENTE = 1; --NÃO EXECUTA

--CORRIGIR ERRO
DELETE FROM TELEFONE
WHERE ID_CLIENTE = 1;
DELETE FROM CLIENTE WHERE IDCLIENTE = 1;

--APAGANDO A FOREIGN KEY

ALTER TABLE TELEFONE DROP FOREIGN KEY FK_CLIENTE_TELEFONE;

--RECRIANDO A FK

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE)
ON DELETE CASCADE;

SELECT * FROM CLIENTE
INNER JOIN TELEFONE;

SELECT NOME, TIPO, NUMERO
FROM CLIENTE
INNER JOIN TELEFONE
ON IDCLIENTE = ID_CLIENTE;

DELETE FROM CLIENTE WHERE IDCLIENTE = 2;

ALTER TABLE TELEFONE DROP FOREIGN KEY FK_CLIENTE_TELEFONE;

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE)
ON DELETE SET NULL;

SELECT NOME, TIPO, NUMERO
FROM CLIENTE
INNER JOIN TELEFONE
ON IDCLIENTE = ID_CLIENTE;

SELECT * FROM CLIENTE;

DELETE FROM CLIENTE WHERE IDCLIENTE = 3;

SELECT * FROM TELEFONE;

/* SET NULL - DELETE CASCADE */

/*A79 EXERCICIO OFICINA DO SEU JOSÉ*/

	/* CADASTRO DE CLIENTE
		->CADA CLIENTE POSSUI APENAS UM CARRO;
		->CADA CARRO POSSUI UMA MARCA;
		REQUESITOS:
			->COR DO CARRO: OBRIGATÓRIO E ACEITA MAIS DE UMA;
			->TELEFONE: NÃO OBRIGATÓRIO.
	*/

	/*MODELO LÓGICO
		CADASTRO CLIENTE É OBRIGATÓRIO, E APENAS UM CARRO POR CLIENTE (1,1)
		CADASTRO DO CARRO OBRIGATÓRIO, PODE TER MAIS DE UMA COR (1,N)
		CADASTRO CLIENTE É OBRIGATÓRIO, E TELEFONE OPCIONAL (1,N)
	*/

CREATE DATABASE PROJETO_OFICINA;

USE PROJETO_OFICINA;

CREATE TABLE CLIENTE(
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M','F','OUTRO') NOT NULL,
	ID_CARRO INT UNIQUE
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT,
	TIPO ENUM('RES','COM','CEL') NOT NULL,
	NUMERO VARCHAR(30) NOT NULL,
	ID_CLIENTE INT
);

CREATE TABLE CARRO(
	IDCARRO INT PRIMARY KEY AUTO_INCREMENT,
	MODELO VARCHAR(30) NOT NULL,
	PLACA VARCHAR(30) NOT NULL UNIQUE,
	ID_MARCA INT
);

CREATE TABLE MARCA(
	IDMARCA INT PRIMARY KEY AUTO_INCREMENT,
	MARCA VARCHAR(30) UNIQUE
);

CREATE TABLE COR(
	IDCOR INT PRIMARY KEY AUTO_INCREMENT,
	COR VARCHAR(30) UNIQUE
);

CREATE TABLE CARRO_COR(
	ID_CARRO INT,
	ID_COR INT,
	PRIMARY KEY(ID_CARRO,ID_COR)
);

/*CONSTRAINTS*/

ALTER TABLE TELEFONE
ADD CONSTRAINT FK_TELEFONE_CLIENTE
FOREIGN KEY(ID_CLIENTE)
REFERENCES CLIENTE(IDCLIENTE);

ALTER TABLE CLIENTE
ADD CONSTRAINT FK_CLIENTE_CARRO
FOREIGN KEY(ID_CARRO)
REFERENCES CARRO(IDCARRO);

ALTER TABLE CARRO
ADD CONSTRAINT FK_CARRO_MARCA
FOREIGN KEY(ID_MARCA)
REFERENCES MARCA(IDMARCA);

ALTER TABLE CARRO_COR
ADD CONSTRAINT FK_CARRO
FOREIGN KEY(ID_CARRO)
REFERENCES CARRO(IDCARRO);

ALTER TABLE CARRO_COR
ADD CONSTRAINT FK_COR
FOREIGN KEY(ID_COR)
REFERENCES COR(IDCOR);

/*A TABELA MAIS FORTE É A TABELA CARRO*/

/* PREENCHER O BANCO COM NO MINIMO 10 CLIENTES */

DESC MARCA;

INSERT INTO MARCA VALUES(NULL, 'FIAT');
INSERT INTO MARCA VALUES(NULL, 'CHEVROLET');
INSERT INTO MARCA VALUES(NULL, 'TOYOTA');
INSERT INTO MARCA VALUES(NULL, 'VOLKSWAGEN');
INSERT INTO MARCA VALUES(NULL, 'JEEP');
INSERT INTO MARCA VALUES(NULL, 'MITSUBISHI');
INSERT INTO MARCA VALUES(NULL, 'CITROEN');
INSERT INTO MARCA VALUES(NULL, 'FORD');
INSERT INTO MARCA VALUES(NULL, 'HYUNDAY');
INSERT INTO MARCA VALUES(NULL, 'HONDA');

+---------+------------+
| IDMARCA | MARCA      |
+---------+------------+
|       1 | FIAT       |
|       2 | CHEVROLET  |
|       3 | TOYOTA     |
|       4 | VOLKSWAGEN |
|       5 | JEEP       |
|       6 | MITSUBISHI |
|       7 | CITROEN    |
|       8 | FORD       |
|       9 | HYUNDAY    |
|      10 | HONDA      |
+---------+------------+

DESC CARRO;

INSERT INTO CARRO VALUES(NULL,'UNO', 'AXY89D54', 1);
INSERT INTO CARRO VALUES(NULL,'CIVIC', 'FMQ50E39', 10);
INSERT INTO CARRO VALUES(NULL,'CLASSIC', 'TOW63J98', 2);
INSERT INTO CARRO VALUES(NULL,'COROLLA', 'MFE02G94', 3);
INSERT INTO CARRO VALUES(NULL,'POLO', 'KFO39J21', 4);
INSERT INTO CARRO VALUES(NULL,'GOLF', 'HBV12L09', 4);
INSERT INTO CARRO VALUES(NULL,'PRISMA', 'LAS30T12', 2);
INSERT INTO CARRO VALUES(NULL,'FIESTA', 'ZBI61Y25', 8);
INSERT INTO CARRO VALUES(NULL,'RENEGADE', 'GKQ43T15', 5);
INSERT INTO CARRO VALUES(NULL,'HB20', 'BTR56F03', 9);

+---------+----------+----------+----------+
| IDCARRO | MODELO   | PLACA    | ID_MARCA |
+---------+----------+----------+----------+
|       1 | UNO      | AXY89D54 |        1 |
|       2 | CIVIC    | FMQ50E39 |       10 |
|       3 | CLASSIC  | TOW63J98 |        2 |
|       4 | COROLLA  | MFE02G94 |        3 |
|       5 | POLO     | KFO39J21 |        4 |
|       6 | GOLF     | HBV12L09 |        4 |
|       7 | PRISMA   | LAS30T12 |        2 |
|       8 | FIESTA   | ZBI61Y25 |        8 |
|       9 | RENEGADE | GKQ43T15 |        5 |
|      10 | HB20     | BTR56F03 |        9 |
+---------+----------+----------+----------+

DESC COR;

INSERT INTO COR VALUES(NULL,'BRANCO');
INSERT INTO COR VALUES(NULL,'CHUMBO');
INSERT INTO COR VALUES(NULL,'PRETO');
INSERT INTO COR VALUES(NULL,'PRATA');
INSERT INTO COR VALUES(NULL,'VERMELHO');
INSERT INTO COR VALUES(NULL,'AZUL');
INSERT INTO COR VALUES(NULL,'VERDE');
INSERT INTO COR VALUES(NULL,'AMARELO');

+-------+----------+
| IDCOR | COR      |
+-------+----------+
|     1 | BRANCO   |
|     2 | CHUMBO   |
|     3 | PRETO    |
|     4 | PRATA    |
|     5 | VERMELHO |
|     6 | AZUL     |
|     7 | VERDE    |
|     8 | AMARELO  |
+-------+----------+

DESC CARRO_COR;

INSERT INTO CARRO_COR VALUES(1, 5);
INSERT INTO CARRO_COR VALUES(2, 4);
INSERT INTO CARRO_COR VALUES(3, 3);
INSERT INTO CARRO_COR VALUES(4, 1);
INSERT INTO CARRO_COR VALUES(5, 6);
INSERT INTO CARRO_COR VALUES(6, 8);
INSERT INTO CARRO_COR VALUES(7, 2);
INSERT INTO CARRO_COR VALUES(8, 6);
INSERT INTO CARRO_COR VALUES(9, 5);
INSERT INTO CARRO_COR VALUES(10, 6);

+----------+--------+
| ID_CARRO | ID_COR |
+----------+--------+
|        1 |      5 |
|        2 |      4 |
|        3 |      3 |
|        4 |      1 |
|        5 |      6 |
|        6 |      8 |
|        7 |      2 |
|        8 |      6 |
|        9 |      5 |
|       10 |      6 |
+----------+--------+

DESC CLIENTE;

INSERT INTO CLIENTE VALUES(NULL,'MARIA', 'F', 3);
INSERT INTO CLIENTE VALUES(NULL,'JONAS', 'M', 1);
INSERT INTO CLIENTE VALUES(NULL,'LUCAS', 'M', 2);
INSERT INTO CLIENTE VALUES(NULL,'NOAH', 'OUTRO', 9);
INSERT INTO CLIENTE VALUES(NULL,'JULIA', 'F', 7);
INSERT INTO CLIENTE VALUES(NULL,'FLÁVIA', 'F', 10);
INSERT INTO CLIENTE VALUES(NULL,'MARCOS', 'M', 6);
INSERT INTO CLIENTE VALUES(NULL, 'TEO', 'OUTRO', 5);
INSERT INTO CLIENTE VALUES(NULL,'ANTONIO', 'M', 8);
INSERT INTO CLIENTE VALUES(NULL,'ARIEL', 'OUTRO', 4);

+-----------+---------+-------+----------+
| IDCLIENTE | NOME    | SEXO  | ID_CARRO |
+-----------+---------+-------+----------+
|         1 | MARIA   | F     |        3 |
|         2 | JONAS   | M     |        1 |
|         3 | LUCAS   | M     |        2 |
|         4 | NOAH    | OUTRO |        9 |
|         5 | JULIA   | F     |        7 |
|         6 | FLÁVIA  | F     |       10 |
|         7 | MARCOS  | M     |        6 |
|         8 | TEO     | OUTRO |        5 |
|         9 | ANTONIO | M     |        8 |
|        10 | ARIEL   | OUTRO |        4 |
+-----------+---------+-------+----------+

DESC TELEFONE;

INSERT INTO TELEFONE VALUES(NULL, 'CEL', '(33)98898-0983', 4);
INSERT INTO TELEFONE VALUES(NULL, 'COM', '(55)98745-8962', 2); 
INSERT INTO TELEFONE VALUES(NULL, 'RES', '(11)99936-6743', 8); 
INSERT INTO TELEFONE VALUES(NULL, 'RES', '(31)98534-6721', 1); 
INSERT INTO TELEFONE VALUES(NULL, 'COM', '(11)99137-7612', 1); 
INSERT INTO TELEFONE VALUES(NULL, 'CEL', '(41)99823-6589', 5); 
INSERT INTO TELEFONE VALUES(NULL, 'RES', '(33)98898-1254', 10); 
INSERT INTO TELEFONE VALUES(NULL, 'CEL', '(31)98812-6743', 10); 

+------------+------+----------------+------------+
| IDTELEFONE | TIPO | NUMERO         | ID_CLIENTE |
+------------+------+----------------+------------+
|          1 | CEL  | (33)98898-0983 |          4 |
|          2 | COM  | (55)98745-8962 |          2 |
|          3 | RES  | (11)99936-6743 |          8 |
|          4 | RES  | (31)98534-6721 |          1 |
|          5 | COM  | (11)99137-7612 |          1 |
|          6 | CEL  | (41)99823-6589 |          5 |
|          7 | RES  | (33)98898-1254 |         10 |
|          8 | CEL  | (31)98812-6743 |         10 |
+------------+------+----------------+------------+ 

/*QUERY: TODAS AS INFORMAÇÕES DOS CLIENTES*/

SELECT  C.IDCLIENTE, C.NOME, C.SEXO,
		T.TIPO, T.NUMERO,
		C.ID_CARRO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
ORDER BY 1;

+-----------+-------+-------+------+----------------+----------+
| IDCLIENTE | NOME  | SEXO  | TIPO | NUMERO         | ID_CARRO |
+-----------+-------+-------+------+----------------+----------+
|         1 | MARIA | F     | RES  | (31)98534-6721 |        3 |
|         1 | MARIA | F     | COM  | (11)99137-7612 |        3 |
|         2 | JONAS | M     | COM  | (55)98745-8962 |        1 |
|         4 | NOAH  | OUTRO | CEL  | (33)98898-0983 |        9 |
|         5 | JULIA | F     | CEL  | (41)99823-6589 |        7 |
|         8 | TEO   | OUTRO | RES  | (11)99936-6743 |        5 |
|        10 | ARIEL | OUTRO | RES  | (33)98898-1254 |        4 |
|        10 | ARIEL | OUTRO | CEL  | (31)98812-6743 |        4 |
+-----------+-------+-------+------+----------------+----------+


 SELECT CLIENTE.IDCLIENTE, CLIENTE.NOME, CLIENTE.SEXO, 
		CARRO.MODELO, CARRO.PLACA, 
		MARCA.MARCA, 
		COR.COR
FROM CARRO
INNER JOIN CLIENTE
ON CLIENTE.ID_CARRO = CARRO.IDCARRO
INNER JOIN MARCA
ON CARRO.ID_MARCA = MARCA.IDMARCA
INNER JOIN CARRO_COR
ON CARRO.IDCARRO = CARRO_COR.ID_CARRO
INNER JOIN COR
ON CARRO_COR.ID_COR = COR.IDCOR
ORDER BY 1;

+-----------+---------+-------+----------+----------+------------+----------+
| IDCLIENTE | NOME    | SEXO  | MODELO   | PLACA    | MARCA      | COR      |
+-----------+---------+-------+----------+----------+------------+----------+
|         1 | MARIA   | F     | CLASSIC  | TOW63J98 | CHEVROLET  | PRETO    |
|         2 | JONAS   | M     | UNO      | AXY89D54 | FIAT       | VERMELHO |
|         3 | LUCAS   | M     | CIVIC    | FMQ50E39 | HONDA      | PRATA    |
|         4 | NOAH    | OUTRO | RENEGADE | GKQ43T15 | JEEP       | VERMELHO |
|         5 | JULIA   | F     | PRISMA   | LAS30T12 | CHEVROLET  | CHUMBO   |
|         6 | FLÁVIA  | F     | HB20     | BTR56F03 | HYUNDAY    | AZUL     |
|         7 | MARCOS  | M     | GOLF     | HBV12L09 | VOLKSWAGEN | AMARELO  |
|         8 | TEO     | OUTRO | POLO     | KFO39J21 | VOLKSWAGEN | AZUL     |
|         9 | ANTONIO | M     | FIESTA   | ZBI61Y25 | FORD       | AZUL     |
|        10 | ARIEL   | OUTRO | COROLLA  | MFE02G94 | TOYOTA     | BRANCO   |
+-----------+---------+-------+----------+----------+------------+----------+
/* A 82 ENTENDENDO TRIGGERS */

/* ESTRUTURA DE UMA TRIGGER */

/*DEVE-SE MUDAR O DELIMITADOR AO CRIAR UMA TRIGGER*/

CREATE TRIGGER NOME
BEFORE/AFTER INSERT/DELETE/UPDATE ON TABELA
FOR EACH ROW (PARA CADA LINHA)
BEGIN -> INICIO

		QUALQUER COMANDO SQL

END -> FIM

CREATE DATABASE AULA_TRIGGER;

USE AULA_TRIGGER;

CREATE TABLE USUARIO(
	IDUSUARIO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30),
	SENHA VARCHAR(100)
);

/*CENÁRIO: AO APAGAR OS DADOS DA TABELA USUÁRIO, ELES SEJAM
AUTOMATICAMENTE ARMAZENADOS NA TABELA BACKUP*/

CREATE TABLE BKP_USUARIO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDUSUARIO INT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30)
);

/* A 83 - CRIANDO A TRIGGER */

DELIMITER $

CREATE TRIGGER BACKUP_USER
BEFORE DELETE ON USUARIO
FOR EACH ROW 
BEGIN
	INSERT INTO BKP_USUARIO VALUES
	(NULL,OLD.IDUSUARIO,OLD.NOME,OLD.LOGIN);
END
$

DELIMITER ;

INSERT INTO USUARIO VALUES(NULL,'ANDRADE','ANDRADE2009','HEXACAMPEAO');

SELECT * FROM USUARIO;

DELETE FROM USUARIO WHERE IDUSUARIO = 1;

SELECT * FROM BKP_USUARIO;

/* A 84 - COMUNICACAO ENTRE BANCOS */

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

STATUS

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBKP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

/*É POSSÍVEL ADICIONAR DADOS DENTRO DE UM BANCO DE DADOS MESMO NÃO ESTANDO CONECTADO A ELE*/

USE LOJA;

STATUS

/*INSERT INTO BKP_PRODUTO VALUES(NULL,1000,'TESTE',0.0); -> ESTRUTURA ERRADA - NÃO HÁ COMUNICAÇÃO ENTRE OS BANCOS */

INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,1000,'TESTE',0.0);

SELECT * FROM BACKUP.BKP_PRODUTO;

/*TRIGGER PARA QUE TODO DADO INSERIDO NA TABELA PRODUTO TAMBÉM SEJA INSERIDO NA BKP_PRODUTO*/

DELIMITER $

CREATE TRIGGER BACKUP_PRODUT
BEFORE INSERT ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,
	NEW.NOME,NEW.VALOR);

END
$

DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);

SELECT * FROM PRODUTO;

+-----------+------------------+--------+
| IDPRODUTO | NOME             | VALOR  |
+-----------+------------------+--------+
|         1 | LIVRO MODELAGEM  |  50.00 |
|         2 | LIVRO BI         |  80.00 |
|         3 | LIVRO ORACLE     |  70.00 |
|         4 | LIVRO SQL SERVER | 100.00 |
+-----------+------------------+--------+

SELECT * FROM BACKUP.BKP_PRODUTO;

+-------+-----------+------------------+--------+
| IDBKP | IDPRODUTO | NOME             | VALOR  |
+-------+-----------+------------------+--------+
|     1 |      1000 | TESTE            |   0.00 |
|     2 |         0 | LIVRO MODELAGEM  |  50.00 |
|     3 |         0 | LIVRO BI         |  80.00 |
|     4 |         0 | LIVRO ORACLE     |  70.00 |
|     5 |         0 | LIVRO SQL SERVER | 100.00 |
+-------+-----------+------------------+--------+

/*TRIGGER PARA DELETAR DADOS DAS DUAS TABELAS DE FORMA SIMULTÂNEA */

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,
	OLD.NOME,OLD.VALOR);

END
$

DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 2;

SELECT * FROM PRODUTO;

+-----------+------------------+--------+
| IDPRODUTO | NOME             | VALOR  |
+-----------+------------------+--------+
|         1 | LIVRO MODELAGEM  |  50.00 |
|         3 | LIVRO ORACLE     |  70.00 |
|         4 | LIVRO SQL SERVER | 100.00 |
+-----------+------------------+--------+

SELECT * FROM BACKUP.BKP_PRODUTO;

+-------+-----------+------------------+--------+
| IDBKP | IDPRODUTO | NOME             | VALOR  |
+-------+-----------+------------------+--------+
|     1 |      1000 | TESTE            |   0.00 |
|     2 |         0 | LIVRO MODELAGEM  |  50.00 |
|     3 |         0 | LIVRO BI         |  80.00 |
|     4 |         0 | LIVRO ORACLE     |  70.00 |
|     5 |         0 | LIVRO SQL SERVER | 100.00 |
|     6 |         2 | LIVRO BI         |  80.00 |
+-------+-----------+------------------+--------+


/*COMO NA 1ª TRIGGER O DADO É PASSADO PARA A TABLE BACKUP ANTES DE SER INSERIDO NA TABLE PRODUTO,
AINDA NÃO FOI DESIGNADO O ID AUTO INCREMENT, POR ISSO PASSA PARA TABLE BACKUP SEM IDPRODUTO, MAS 
NA 2ª TRIGGER É PASSADO O ID PORQUE O DADO JÁ TINHA SIDO ARMAZENADO NA TABLE PRODUTO */

/*DELETAR E RECRIAR A PRIMEIRA TRIGGER*/

DROP TRIGGER BACKUP_PRODUT;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO
AFTER INSERT ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,
	NEW.NOME,NEW.VALOR);

END
$

/*AGORA O DADO SERÁ ENCAMINHADO PARA A OUTRA TABELA, DEPOIS DE SER INSERIDO NA ORIGINAL.
PORTANDO JÁ DEVE CONSTAR O IDPRODUTO QUE É DO TIPO AUTO INCREMENT*/
DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO C#',100.00);


SELECT * FROM PRODUTO;

+-----------+------------------+--------+
| IDPRODUTO | NOME             | VALOR  |
+-----------+------------------+--------+
|         1 | LIVRO MODELAGEM  |  50.00 |
|         3 | LIVRO ORACLE     |  70.00 |
|         4 | LIVRO SQL SERVER | 100.00 |
|         5 | LIVRO C#         | 100.00 |
+-----------+------------------+--------+

SELECT * FROM BACKUP.BKP_PRODUTO;

+-------+-----------+------------------+--------+
| IDBKP | IDPRODUTO | NOME             | VALOR  |
+-------+-----------+------------------+--------+
|     1 |      1000 | TESTE            |   0.00 |
|     2 |         0 | LIVRO MODELAGEM  |  50.00 |
|     3 |         0 | LIVRO BI         |  80.00 |
|     4 |         0 | LIVRO ORACLE     |  70.00 |
|     5 |         0 | LIVRO SQL SERVER | 100.00 |
|     6 |         2 | LIVRO BI         |  80.00 |
|     7 |         5 | LIVRO C#         | 100.00 |
+-------+-----------+------------------+--------+

/* A85 - EVENTOS DE UM TRIGGER*/

ALTER TABLE BACKUP.BKP_PRODUTO
ADD EVENTO CHAR(1);

SELECT * FROM BACKUP.BKP_PRODUTO;

+-------+-----------+------------------+--------+--------+
| IDBKP | IDPRODUTO | NOME             | VALOR  | EVENTO |
+-------+-----------+------------------+--------+--------+
|     1 |      1000 | TESTE            |   0.00 | NULL   |
|     2 |         0 | LIVRO MODELAGEM  |  50.00 | NULL   |
|     3 |         0 | LIVRO BI         |  80.00 | NULL   |
|     4 |         0 | LIVRO ORACLE     |  70.00 | NULL   |
|     5 |         0 | LIVRO SQL SERVER | 100.00 | NULL   |
|     6 |         2 | LIVRO BI         |  80.00 | NULL   |
|     7 |         5 | LIVRO C#         | 100.00 | NULL   |
+-------+-----------+------------------+--------+--------+

/*APAGAR A TABELA ONDE É INSERIDO O DADO DA TABLE BACKUP APÓS SER DELETADA NA ORIGINAL, E DEPOIS REFAZER COM UMA NOVA COLUNA*/

DROP TRIGGER BACKUP_PRODUTO_DEL;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,
	OLD.NOME,OLD.VALOR,'D');

END
$

DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 4;

SELECT * FROM PRODUTO;

+-----------+-----------------+--------+
| IDPRODUTO | NOME            | VALOR  |
+-----------+-----------------+--------+
|         1 | LIVRO MODELAGEM |  50.00 |
|         3 | LIVRO ORACLE    |  70.00 |
|         5 | LIVRO C#        | 100.00 |
+-----------+-----------------+--------+

SELECT * FROM BACKUP.BKP_PRODUTO;

+-------+-----------+------------------+--------+--------+
| IDBKP | IDPRODUTO | NOME             | VALOR  | EVENTO |
+-------+-----------+------------------+--------+--------+
|     1 |      1000 | TESTE            |   0.00 | NULL   |
|     2 |         0 | LIVRO MODELAGEM  |  50.00 | NULL   |
|     3 |         0 | LIVRO BI         |  80.00 | NULL   |
|     4 |         0 | LIVRO ORACLE     |  70.00 | NULL   |
|     5 |         0 | LIVRO SQL SERVER | 100.00 | NULL   |
|     6 |         2 | LIVRO BI         |  80.00 | NULL   |
|     7 |         5 | LIVRO C#         | 100.00 | NULL   |
|     8 |         4 | LIVRO SQL SERVER | 100.00 | D      |
+-------+-----------+------------------+--------+--------+

/* A 86 - TRIGGER DE AUDITORIA */

DELIMITER ;

DROP DATABASE LOJA;

DROP DATABASE BACKUP;

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);

/*QUANDO*/
--SELECT NOW();

/*QUEM*/
--SELECT CURRENT_USER();

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR_ORIGINAL FLOAT(10,2),
	VALOR_ALTERADO FLOAT(10,2),
	DATA DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)
	
);

USE LOJA;

SELECT * FROM PRODUTO;

+-----------+------------------+--------+
| IDPRODUTO | NOME             | VALOR  |
+-----------+------------------+--------+
|         1 | LIVRO MODELAGEM  |  50.00 |
|         2 | LIVRO BI         |  80.00 |
|         3 | LIVRO ORACLE     |  70.00 |
|         4 | LIVRO SQL SERVER | 100.00 |
+-----------+------------------+--------+

/*TRIGGER PARA AUDITORIA: HORA E USUÁRIO QUE ALTERARAM A TABELA PRODUTO*/

DELIMITER $

CREATE TRIGGER AUDIT_PROD
AFTER UPDATE ON PRODUTO
FOR EACH ROW
BEGIN

	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,OLD.NOME,
	OLD.VALOR,NEW.VALOR,NOW(),CURRENT_USER(),'U');
	
END
$

DELIMITER ;

UPDATE PRODUTO SET VALOR = 110.00
WHERE IDPRODUTO = 4;

SELECT * FROM PRODUTO;

+-----------+------------------+--------+
| IDPRODUTO | NOME             | VALOR  |
+-----------+------------------+--------+
|         1 | LIVRO MODELAGEM  |  50.00 |
|         2 | LIVRO BI         |  80.00 |
|         3 | LIVRO ORACLE     |  70.00 |
|         4 | LIVRO SQL SERVER | 110.00 |
+-----------+------------------+--------+

SELECT * FROM BACKUP.BKP_PRODUTO;

+----------+-----------+------------------+----------------+----------------+---------------------+----------------+--------+
| IDBACKUP | IDPRODUTO | NOME             | VALOR_ORIGINAL | VALOR_ALTERADO | DATA                | USUARIO        | EVENTO |
+----------+-----------+------------------+----------------+----------------+---------------------+----------------+--------+
|        1 |         4 | LIVRO SQL SERVER |         100.00 |         110.00 | 2023-08-17 18:20:58 | root@localhost | U      |
+----------+-----------+------------------+----------------+----------------+---------------------+----------------+--------+


/* A87 - AUTORELACIONAMENTO */

CREATE DATABASE AULA87;

USE AULA87;

CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	HORAS INT,
	VALOR FLOAT(10,2),
	ID_PREREQ INT
);

ALTER TABLE CURSOS ADD CONSTRAINT FK_PREREQ
FOREIGN KEY(ID_PREREQ) REFERENCES CURSOS(IDCURSO);

INSERT INTO CURSOS VALUES(NULL,'BD RELACIONAL',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'BUSINESS INTELLIGENCE',40,800.00,1);
INSERT INTO CURSOS VALUES(NULL,'RELATORIOS AVANCADOS',20,600.00,2);
INSERT INTO CURSOS VALUES(NULL,'LOGICA PROGRAMAÇÃO',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'RUBY',30,500.00,4);

SELECT * FROM CURSOS;

+---------+-----------------------+-------+--------+-----------+
| IDCURSO | NOME                  | HORAS | VALOR  | ID_PREREQ |
+---------+-----------------------+-------+--------+-----------+
|       1 | BD RELACIONAL         |    20 | 400.00 |      NULL |
|       2 | BUSINESS INTELLIGENCE |    40 | 800.00 |         1 |
|       3 | RELATORIOS AVANCADOS  |    20 | 600.00 |         2 |
|       4 | LOGICA PROGRAMAÇÃO    |    20 | 400.00 |      NULL |
|       5 | RUBY                  |    30 | 500.00 |         4 |
+---------+-----------------------+-------+--------+-----------+

SELECT NOME, VALOR, HORAS, 
IFNULL(ID_PREREQ,"SEM REQ") REQUISITO
FROM CURSOS;

+-----------------------+--------+-------+-----------+
| NOME                  | VALOR  | HORAS | REQUISITO |
+-----------------------+--------+-------+-----------+
| BD RELACIONAL         | 400.00 |    20 | SEM REQ   |
| BUSINESS INTELLIGENCE | 800.00 |    40 | 1         |
| RELATORIOS AVANCADOS  | 600.00 |    20 | 2         |
| LOGICA PROGRAMAÇÃO    | 400.00 |    20 | SEM REQ   |
| RUBY                  | 500.00 |    30 | 4         |
+-----------------------+--------+-------+-----------+


/* NOME, VALOR, HORAS E O NOME DO PRE REQUISITO DO CURSO */

SELECT 
C.NOME AS CURSO, 
C.VALOR AS VALOR, 
C.HORAS AS CARGA, 
IFNULL(P.NOME, "---") AS PREREQ
FROM CURSOS C LEFT JOIN CURSOS P
ON P.IDCURSO = C.ID_PREREQ;

/* A 89 - CURSORES */

CREATE DATABASE CURSORES;
USE CURSORES;

CREATE TABLE VENDEDORES(
	IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(50),
	JAN INT,
	FEV INT,
	MAR INT
);

INSERT INTO VENDEDORES VALUES(NULL,'MAFRA',32432,242334,574545);
INSERT INTO VENDEDORES VALUES(NULL,'CLARA',65465,65443,653454);
INSERT INTO VENDEDORES VALUES(NULL,'JOAO',12432,65356,8756);
INSERT INTO VENDEDORES VALUES(NULL,'LILIAN',4567,9676,8765);
INSERT INTO VENDEDORES VALUES(NULL,'ANTONIO',3467,68756,99765);
INSERT INTO VENDEDORES VALUES(NULL,'GLORIA',54786,76889,7098);

SELECT * FROM VENDEDORES;

+------------+---------+-------+--------+--------+
| IDVENDEDOR | NOME    | JAN   | FEV    | MAR    |
+------------+---------+-------+--------+--------+
|          1 | MAFRA   | 32432 | 242334 | 574545 |
|          2 | CLARA   | 65465 |  65443 | 653454 |
|          3 | JOAO    | 12432 |  65356 |   8756 |
|          4 | LILIAN  |  4567 |   9676 |   8765 |
|          5 | ANTONIO |  3467 |  68756 |  99765 |
|          6 | GLORIA  | 54786 |  76889 |   7098 |
+------------+---------+-------+--------+--------+

SELECT NOME, (JAN+FEV+MAR) AS TOTAL FROM VENDEDORES;

+---------+--------+
| NOME    | TOTAL  |
+---------+--------+
| MAFRA   | 849311 |
| CLARA   | 784362 |
| JOAO    |  86544 |
| LILIAN  |  23008 |
| ANTONIO | 171988 |
| GLORIA  | 138773 |
+---------+--------+

SELECT NOME, (JAN+FEV+MAR) AS TOTAL, (JAN+FEV+MAR)/3 AS MEDIA FROM VENDEDORES;

+---------+--------+-------------+
| NOME    | TOTAL  | MEDIA       |
+---------+--------+-------------+
| MAFRA   | 849311 | 283103.6667 |
| CLARA   | 784362 | 261454.0000 |
| JOAO    |  86544 |  28848.0000 |
| LILIAN  |  23008 |   7669.3333 |
| ANTONIO | 171988 |  57329.3333 |
| GLORIA  | 138773 |  46257.6667 |
+---------+--------+-------------+

CREATE TABLE VEND_TOTAL(
	NOME VARCHAR(50),
	JAN INT,
	FEV INT,
	MAR INT,
	TOTAL INT,
	MEDIA INT
);

DELIMITER $

CREATE PROCEDURE INSEREDADOS()
BEGIN
		DECLARE FIM INT DEFAULT 0;
		DECLARE VAR1, VAR2, VAR3, VTOTAL, VMEDIA INT;
		DECLARE VNOME VARCHAR(50);
		
		DECLARE REG CURSOR FOR(
			SELECT NOME, JAN, FEV, MAR FROM VENDEDORES
		);
		
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET FIM = 1; /*PADRÃO*/
		
		OPEN REG;/*ABRIR O REGISTRO MANDA OS DADOS DO HD PARA A MEMÓRIA RAM*/
		
		REPEAT /*LOOP*/
		
			FETCH REG INTO VNOME, VAR1, VAR2, VAR3; /*FETCH -> ME TRAGA O PRÓXIMO*/
			IF NOT FIM THEN /*SE FALSO CONTINUA O LOOP*/
			
				SET VTOTAL = VAR1 + VAR2 + VAR3;
				SET VMEDIA = VTOTAL / 3;
				
				INSERT INTO VEND_TOTAL VALUES(VNOME,VAR1,VAR2,VAR3,VTOTAL,VMEDIA);
				
			END IF;
			
		UNTIL FIM END REPEAT; /*FIM DO LOOP*/
		
		CLOSE REG; /*LIMPAR A MEMÓRIA RAM*/
END
$


DELIMITER ;

SELECT * FROM VENDEDORES;

+------------+---------+-------+--------+--------+
| IDVENDEDOR | NOME    | JAN   | FEV    | MAR    |
+------------+---------+-------+--------+--------+
|          1 | MAFRA   | 32432 | 242334 | 574545 |
|          2 | CLARA   | 65465 |  65443 | 653454 |
|          3 | JOAO    | 12432 |  65356 |   8756 |
|          4 | LILIAN  |  4567 |   9676 |   8765 |
|          5 | ANTONIO |  3467 |  68756 |  99765 |
|          6 | GLORIA  | 54786 |  76889 |   7098 |
+------------+---------+-------+--------+--------+

SELECT * FROM VEND_TOTAL;
--EMPTY SET


--INSERINDO DADOS NO CURSOR:

CALL INSEREDADOS();

SELECT * FROM VEND_TOTAL;

+---------+-------+--------+--------+--------+--------+
| NOME    | JAN   | FEV    | MAR    | TOTAL  | MEDIA  |
+---------+-------+--------+--------+--------+--------+
| MAFRA   | 32432 | 242334 | 574545 | 849311 | 283104 |
| CLARA   | 65465 |  65443 | 653454 | 784362 | 261454 |
| JOAO    | 12432 |  65356 |   8756 |  86544 |  28848 |
| LILIAN  |  4567 |   9676 |   8765 |  23008 |   7669 |
| ANTONIO |  3467 |  68756 |  99765 | 171988 |  57329 |
| GLORIA  | 54786 |  76889 |   7098 | 138773 |  46258 |
+---------+-------+--------+--------+--------+--------+

/* ESSE TRECHO NÃO CONSTA NAS AULAS

INSERT INTO VENDEDORES VALUES(NULL,'LETICIA',656,3546,234545);
INSERT INTO VENDEDORES VALUES(NULL,'CELIA',6766,56556,65454);

SELECT * FROM VENDEDORES;
SELECT * FROM VEND_TOTAL;

DELETE FROM VEND_TOTAL;

CALL INSEREDADOS();

--A 46 TRIGGERS COM VARIAVEIS

DELIMITER $

CREATE TRIGGER CADTOTAL
BEFORE INSERT ON VENDEDORES
FOR EACH ROW
BEGIN
		DECLARE VTOTAL, VMEDIA INT;
		
		SET VTOTAL := NEW.JAN + NEW.FEV + NEW.MAR;
		SET VMEDIA := (NEW.JAN + NEW.FEV + NEW.MAR)/3;
		
		INSERT INTO VEND_TOTAL VALUES(NEW.NOME,NEW.JAN,NEW.FEV,NEW.MAR,VTOTAL,VMEDIA);

END
$

DELIMITER ;

INSERT INTO VENDEDORES VALUES(NULL,'JULIO',9999,9999,9999);
						  
SELECT * FROM VENDEDORES;
SELECT * FROM VEND_TOTAL;

ERRO DE SEQUÊNCIA */

--A91 SEGUNDA E TERCEIRAS FORMAS NORMAIS

/*
	 PRIMEIRA FORMA NORMAL
	 
	 	ATOMICIDADE - UM CAMPO NAO PODE SER DIVISIVEL;
	 	UM CAMPO NAO PODE SER VETORIZADO;
	 	PK CHAVE PRIMARIA.

*/


--AULA 92 

CREATE DATABASE CONSULTORIO;
USE CONSULTORIO;

CREATE TABLE PACIENTE(
	IDPACIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	EMAIL VARCHAR(30),
	NASCIMENTO DATE /*APENAS DATA*/
);

CREATE TABLE MEDICO(
	IDMEDICO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	ESPECIALIDADE VARCHAR(30),
	FUNCIONARIO ENUM('S','N')
);

CREATE TABLE HOSPITAL(
	IDHOSPITAL INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	BAIRRO VARCHAR(30),
	CIDADE VARCHAR(30),
	ESTADO CHAR(2)
);

CREATE TABLE CONSULTA(
	IDCONSULTA INT PRIMARY KEY AUTO_INCREMENT,
	ID_PACIENTE INT,
	ID_MEDICO INT,
	ID_HOSPITAL INT,
	DATA DATETIME, /*DATA E HORA*/
	DIAGNOSTICO VARCHAR(50)
);

CREATE TABLE INTERNACAO(
	IDINTERNACAO INT PRIMARY KEY AUTO_INCREMENT,
	ENTRADA DATETIME,
	QUARTO INT,
	SAIDA DATETIME,
	OBSERVACOES VARCHAR(50),
	ID_CONSULTA INT UNIQUE	
);  

--AULA 93

--CRIANDO AS CONSTRAINTS

ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_PACIENTE
FOREIGN KEY(ID_PACIENTE) REFERENCES PACIENTE(IDPACIENTE);

ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_MEDICO
FOREIGN KEY(ID_MEDICO) REFERENCES MEDICO(IDMEDICO);

ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_HOSPITAL
FOREIGN KEY(ID_HOSPITAL) REFERENCES HOSPITAL(IDHOSPITAL);

ALTER TABLE INTERNACAO ADD CONSTRAINT FK_INTERNACAO_CONSULTA
FOREIGN KEY(ID_CONSULTA) REFERENCES CONSULTA(IDCONSULTA);

--LOCALIZAR CONSTRAINTS

SHOW DATABASES;

USE INFORMATION_SCHEMA;

SHOW TABLES;

DESC TABLE_CONSTRAINTS;

SELECT * FROM TABLE_CONSTRAINTS;